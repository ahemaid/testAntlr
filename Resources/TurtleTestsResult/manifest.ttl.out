line 1  ## Distributed under both the W3C Test Suite License[1] and the W3C 3-
line 2  ## clause BSD License[2]. To contribute to a W3C Test Suite, see the
line 3  ## policies and contribution forms [3]
line 4  ##
line 5  ## 1. http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
line 6  ## 2. http://www.w3.org/Consortium/Legal/2008/03-bsd-license
line 7  ## 3. http://www.w3.org/2004/10/27-testcases
line 8  
line 9  # Test named *subm* are (c) W3C and taken from the Turtle submission.
line 10  
line 11  @prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
line 12  @prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
line 13  @prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
line 14  @prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
line 15  
line 16  @prefix rdft:   <http://www.w3.org/ns/rdftest#> .
line 17  
line 18  <>  rdf:type mf:Manifest ;
line 19      rdfs:comment "Turtle tests" ;
line 20      mf:entries
line 21      (
line 22  
line 23      # atomic tests
line 24      <#IRI_subject>
line 25      <#IRI_with_four_digit_numeric_escape>
line 26      <#IRI_with_eight_digit_numeric_escape>
line 27      <#IRI_with_all_punctuation>
line 28      <#bareword_a_predicate>
line 29      <#old_style_prefix>
line 30      <#SPARQL_style_prefix>
line 31      <#prefixed_IRI_predicate>
line 32      <#prefixed_IRI_object>
line 33      <#prefix_only_IRI>
line 34      <#prefix_with_PN_CHARS_BASE_character_boundaries>
line 35      <#prefix_with_non_leading_extras>
line 36      <#default_namespace_IRI>
line 37      <#prefix_reassigned_and_used>
line 38      <#reserved_escaped_localName>
line 39      <#percent_escaped_localName>
line 40      <#HYPHEN_MINUS_in_localName>
line 41      <#underscore_in_localName>
line 42      <#localname_with_COLON>
line 43      <#localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries>
line 44      <#localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries>
line 45      <#localName_with_nfc_PN_CHARS_BASE_character_boundaries>
line 46      <#localName_with_leading_underscore>
line 47      <#localName_with_leading_digit>
line 48      <#localName_with_non_leading_extras>
line 49      <#old_style_base>
line 50      <#SPARQL_style_base>
line 51      <#labeled_blank_node_subject>
line 52      <#labeled_blank_node_object>
line 53      <#labeled_blank_node_with_PN_CHARS_BASE_character_boundaries>
line 54      <#labeled_blank_node_with_leading_underscore>
line 55      <#labeled_blank_node_with_leading_digit>
line 56      <#labeled_blank_node_with_non_leading_extras>
line 57      <#anonymous_blank_node_subject>
line 58      <#anonymous_blank_node_object>
line 59      <#sole_blankNodePropertyList>
line 60      <#blankNodePropertyList_as_subject>
line 61      <#blankNodePropertyList_as_object>
line 62      <#blankNodePropertyList_with_multiple_triples>
line 63      <#nested_blankNodePropertyLists>
line 64      <#blankNodePropertyList_containing_collection>
line 65      <#collection_subject>
line 66      <#collection_object>
line 67      <#empty_collection>
line 68      <#nested_collection>
line 69      <#first>
line 70      <#last>
line 71      <#LITERAL1>
line 72      <#LITERAL1_ascii_boundaries>
line 73      <#LITERAL1_with_UTF8_boundaries>
line 74      <#LITERAL1_all_controls>
line 75      <#LITERAL1_all_punctuation>
line 76      <#LITERAL_LONG1>
line 77      <#LITERAL_LONG1_ascii_boundaries>
line 78      <#LITERAL_LONG1_with_UTF8_boundaries>
line 79      <#LITERAL_LONG1_with_1_squote>
line 80      <#LITERAL_LONG1_with_2_squotes>
line 81      <#LITERAL2>
line 82      <#LITERAL2_ascii_boundaries>
line 83      <#LITERAL2_with_UTF8_boundaries>
line 84      <#LITERAL_LONG2>
line 85      <#LITERAL_LONG2_ascii_boundaries>
line 86      <#LITERAL_LONG2_with_UTF8_boundaries>
line 87      <#LITERAL_LONG2_with_1_squote>
line 88      <#LITERAL_LONG2_with_2_squotes>
line 89      <#literal_with_CHARACTER_TABULATION>
line 90      <#literal_with_BACKSPACE>
line 91      <#literal_with_LINE_FEED>
line 92      <#literal_with_CARRIAGE_RETURN>
line 93      <#literal_with_FORM_FEED>
line 94      <#literal_with_REVERSE_SOLIDUS>
line 95      <#literal_with_escaped_CHARACTER_TABULATION>
line 96      <#literal_with_escaped_BACKSPACE>
line 97      <#literal_with_escaped_LINE_FEED>
line 98      <#literal_with_escaped_CARRIAGE_RETURN>
line 99      <#literal_with_escaped_FORM_FEED>
line 100      <#literal_with_numeric_escape4>
line 101      <#literal_with_numeric_escape8>
line 102      <#IRIREF_datatype>
line 103      <#prefixed_name_datatype>
line 104      <#bareword_integer>
line 105      <#bareword_decimal>
line 106      <#bareword_double>
line 107      <#double_lower_case_e>
line 108      <#negative_numeric>
line 109      <#positive_numeric>
line 110      <#numeric_with_leading_0>
line 111      <#literal_true>
line 112      <#literal_false>
line 113      <#langtagged_non_LONG>
line 114      <#langtagged_LONG>
line 115      <#lantag_with_subtag>
line 116      <#objectList_with_two_objects>
line 117      <#predicateObjectList_with_two_objectLists>
line 118      <#repeated_semis_at_end>
line 119      <#repeated_semis_not_at_end>
line 120  
line 121      # tests requested by Jeremy Carroll
line 122      # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c35
line 123      <#comment_following_localName>
line 124      <#number_sign_following_localName>
line 125      <#comment_following_PNAME_NS>
line 126      <#number_sign_following_PNAME_NS>
line 127  
line 128      # tests from Dave Beckett
line 129      # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c28
line 130      <#LITERAL_LONG2_with_REVERSE_SOLIDUS>
line 131      <#turtle-syntax-bad-LITERAL2_with_langtag_and_datatype>
line 132      <#two_LITERAL_LONG2s>
line 133      <#langtagged_LONG_with_subtag>
line 134  
line 135      # original tests-ttl
line 136      <#turtle-syntax-file-01>
line 137      <#turtle-syntax-file-02>
line 138      <#turtle-syntax-file-03>
line 139      <#turtle-syntax-uri-01>
line 140      <#turtle-syntax-uri-02>
line 141      <#turtle-syntax-uri-03>
line 142      <#turtle-syntax-uri-04>
line 143      <#turtle-syntax-base-01>
line 144      <#turtle-syntax-base-02>
line 145      <#turtle-syntax-base-03>
line 146      <#turtle-syntax-base-04>
line 147      <#turtle-syntax-prefix-01>
line 148      <#turtle-syntax-prefix-02>
line 149      <#turtle-syntax-prefix-03>
line 150      <#turtle-syntax-prefix-04>
line 151      <#turtle-syntax-prefix-05>
line 152      <#turtle-syntax-prefix-06>
line 153      <#turtle-syntax-prefix-07>
line 154      <#turtle-syntax-prefix-08>
line 155      <#turtle-syntax-prefix-09>
line 156      <#turtle-syntax-string-01>
line 157      <#turtle-syntax-string-02>
line 158      <#turtle-syntax-string-03>
line 159      <#turtle-syntax-string-04>
line 160      <#turtle-syntax-string-05>
line 161      <#turtle-syntax-string-06>
line 162      <#turtle-syntax-string-07>
line 163      <#turtle-syntax-string-08>
line 164      <#turtle-syntax-string-09>
line 165      <#turtle-syntax-string-10>
line 166      <#turtle-syntax-string-11>
line 167      <#turtle-syntax-str-esc-01>
line 168      <#turtle-syntax-str-esc-02>
line 169      <#turtle-syntax-str-esc-03>
line 170      <#turtle-syntax-pname-esc-01>
line 171      <#turtle-syntax-pname-esc-02>
line 172      <#turtle-syntax-pname-esc-03>
line 173      <#turtle-syntax-bnode-01>
line 174      <#turtle-syntax-bnode-02>
line 175      <#turtle-syntax-bnode-03>
line 176      <#turtle-syntax-bnode-04>
line 177      <#turtle-syntax-bnode-05>
line 178      <#turtle-syntax-bnode-06>
line 179      <#turtle-syntax-bnode-07>
line 180      <#turtle-syntax-bnode-08>
line 181      <#turtle-syntax-bnode-09>
line 182      <#turtle-syntax-bnode-10>
line 183      <#turtle-syntax-number-01>
line 184      <#turtle-syntax-number-02>
line 185      <#turtle-syntax-number-03>
line 186      <#turtle-syntax-number-04>
line 187      <#turtle-syntax-number-05>
line 188      <#turtle-syntax-number-06>
line 189      <#turtle-syntax-number-07>
line 190      <#turtle-syntax-number-08>
line 191      <#turtle-syntax-number-09>
line 192      <#turtle-syntax-number-10>
line 193      <#turtle-syntax-number-11>
line 194      <#turtle-syntax-datatypes-01>
line 195      <#turtle-syntax-datatypes-02>
line 196      <#turtle-syntax-kw-01>
line 197      <#turtle-syntax-kw-02>
line 198      <#turtle-syntax-kw-03>
line 199      <#turtle-syntax-struct-01>
line 200      <#turtle-syntax-struct-02>
line 201      <#turtle-syntax-struct-03>
line 202      <#turtle-syntax-struct-04>
line 203      <#turtle-syntax-struct-05>
line 204      <#turtle-syntax-lists-01>
line 205      <#turtle-syntax-lists-02>
line 206      <#turtle-syntax-lists-03>
line 207      <#turtle-syntax-lists-04>
line 208      <#turtle-syntax-lists-05>
line 209      <#turtle-syntax-bad-uri-01>
line 210      <#turtle-syntax-bad-uri-02>
line 211      <#turtle-syntax-bad-uri-03>
line 212      <#turtle-syntax-bad-uri-04>
line 213      <#turtle-syntax-bad-uri-05>
line 214      <#turtle-syntax-bad-prefix-01>
line 215      <#turtle-syntax-bad-prefix-02>
line 216      <#turtle-syntax-bad-prefix-03>
line 217      <#turtle-syntax-bad-prefix-04>
line 218      <#turtle-syntax-bad-prefix-05>
line 219      <#turtle-syntax-bad-base-01>
line 220      <#turtle-syntax-bad-base-02>
line 221      <#turtle-syntax-bad-base-03>
line 222      <#turtle-syntax-bad-struct-01>
line 223      <#turtle-syntax-bad-struct-02>
line 224      <#turtle-syntax-bad-struct-03>
line 225      <#turtle-syntax-bad-struct-04>
line 226      <#turtle-syntax-bad-struct-05>
line 227      <#turtle-syntax-bad-struct-06>
line 228      <#turtle-syntax-bad-struct-07>
line 229      <#turtle-syntax-bad-kw-01>
line 230      <#turtle-syntax-bad-kw-02>
line 231      <#turtle-syntax-bad-kw-03>
line 232      <#turtle-syntax-bad-kw-04>
line 233      <#turtle-syntax-bad-kw-05>
line 234      <#turtle-syntax-bad-n3-extras-01>
line 235      <#turtle-syntax-bad-n3-extras-02>
line 236      <#turtle-syntax-bad-n3-extras-03>
line 237      <#turtle-syntax-bad-n3-extras-04>
line 238      <#turtle-syntax-bad-n3-extras-05>
line 239      <#turtle-syntax-bad-n3-extras-06>
line 240      <#turtle-syntax-bad-n3-extras-07>
line 241      <#turtle-syntax-bad-n3-extras-08>
line 242      <#turtle-syntax-bad-n3-extras-09>
line 243      <#turtle-syntax-bad-n3-extras-10>
line 244      <#turtle-syntax-bad-n3-extras-11>
line 245      <#turtle-syntax-bad-n3-extras-12>
line 246      <#turtle-syntax-bad-n3-extras-13>
line 247      <#turtle-syntax-bad-struct-08>
line 248      <#turtle-syntax-bad-struct-09>
line 249      <#turtle-syntax-bad-struct-10>
line 250      <#turtle-syntax-bad-struct-11>
line 251      <#turtle-syntax-bad-struct-12>
line 252      <#turtle-syntax-bad-struct-13>
line 253      <#turtle-syntax-bad-struct-14>
line 254      <#turtle-syntax-bad-struct-15>
line 255      <#turtle-syntax-bad-struct-16>
line 256      <#turtle-syntax-bad-struct-17>
line 257      <#turtle-syntax-bad-lang-01>
line 258      <#turtle-syntax-bad-esc-01>
line 259      <#turtle-syntax-bad-esc-02>
line 260      <#turtle-syntax-bad-esc-03>
line 261      <#turtle-syntax-bad-esc-04>
line 262      <#turtle-syntax-bad-pname-01>
line 263      <#turtle-syntax-bad-pname-02>
line 264      <#turtle-syntax-bad-pname-03>
line 265      <#turtle-syntax-bad-string-01>
line 266      <#turtle-syntax-bad-string-02>
line 267      <#turtle-syntax-bad-string-03>
line 268      <#turtle-syntax-bad-string-04>
line 269      <#turtle-syntax-bad-string-05>
line 270      <#turtle-syntax-bad-string-06>
line 271      <#turtle-syntax-bad-string-07>
line 272      <#turtle-syntax-bad-num-01>
line 273      <#turtle-syntax-bad-num-02>
line 274      <#turtle-syntax-bad-num-03>
line 275      <#turtle-syntax-bad-num-04>
line 276      <#turtle-syntax-bad-num-05>
line 277      <#turtle-eval-struct-01>
line 278      <#turtle-eval-struct-02>
line 279      <#turtle-subm-01>
line 280      <#turtle-subm-02>
line 281      <#turtle-subm-03>
line 282      <#turtle-subm-04>
line 283      <#turtle-subm-05>
line 284      <#turtle-subm-06>
line 285      <#turtle-subm-07>
line 286      <#turtle-subm-08>
line 287      <#turtle-subm-09>
line 288      <#turtle-subm-10>
line 289      <#turtle-subm-11>
line 290      <#turtle-subm-12>
line 291      <#turtle-subm-13>
line 292      <#turtle-subm-14>
line 293      <#turtle-subm-15>
line 294      <#turtle-subm-16>
line 295      <#turtle-subm-17>
line 296      <#turtle-subm-18>
line 297      <#turtle-subm-19>
line 298      <#turtle-subm-20>
line 299      <#turtle-subm-21>
line 300      <#turtle-subm-22>
line 301      <#turtle-subm-23>
line 302      <#turtle-subm-24>
line 303      <#turtle-subm-25>
line 304      <#turtle-subm-26>
line 305      <#turtle-subm-27>
line 306      <#turtle-eval-bad-01>
line 307      <#turtle-eval-bad-02>
line 308      <#turtle-eval-bad-03>
line 309      <#turtle-eval-bad-04>
line 310  
line 311      # tests from David Robillard
line 312      # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c21
line 313      <#turtle-syntax-bad-blank-label-dot-end>
line 314      <#turtle-syntax-bad-ln-dash-start>
line 315      <#turtle-syntax-bad-ln-escape-start>
line 316      <#turtle-syntax-bad-ln-escape>
line 317      <#turtle-syntax-bad-missing-ns-dot-end>
line 318      <#turtle-syntax-bad-missing-ns-dot-start>
line 319      <#turtle-syntax-bad-ns-dot-end>
line 320      <#turtle-syntax-bad-ns-dot-start>
line 321      <#turtle-syntax-bad-number-dot-in-anon>
line 322      <#turtle-syntax-blank-label>
line 323      <#turtle-syntax-ln-colons>
line 324      <#turtle-syntax-ln-dots>
line 325      <#turtle-syntax-ns-dots>
line 326      ) .
line 327  
line 328  # atomic tests
line 329  <#IRI_subject> rdf:type rdft:TestTurtleEval ;
line 330     mf:name      "IRI_subject" ;
line 331     rdfs:comment "IRI subject" ;
line 332     rdft:approval rdft:Approved ;
line 333     mf:action    <IRI_subject.ttl> ;
line 334     mf:result    <IRI_spo.nt> ;
line 335     .
line 336  
line 337  <#IRI_with_four_digit_numeric_escape> rdf:type rdft:TestTurtleEval ;
line 338     mf:name      "IRI_with_four_digit_numeric_escape" ;
line 339     rdfs:comment "IRI with four digit numeric escape (\\u)" ;
line 340     rdft:approval rdft:Approved ;
line 341     mf:action    <IRI_with_four_digit_numeric_escape.ttl> ;
line 342     mf:result    <IRI_spo.nt> ;
line 343     .
line 344  
line 345  <#IRI_with_eight_digit_numeric_escape> rdf:type rdft:TestTurtleEval ;
line 346     mf:name      "IRI_with_eight_digit_numeric_escape" ;
line 347     rdfs:comment "IRI with eight digit numeric escape (\\U)" ;
line 348     rdft:approval rdft:Approved ;
line 349     mf:action    <IRI_with_eight_digit_numeric_escape.ttl> ;
line 350     mf:result    <IRI_spo.nt> ;
line 351     .
line 352  
line 353  <#IRI_with_all_punctuation> rdf:type rdft:TestTurtleEval ;
line 354     mf:name      "IRI_with_all_punctuation" ;
line 355     rdfs:comment "IRI with all punctuation" ;
line 356     rdft:approval rdft:Approved ;
line 357     mf:action    <IRI_with_all_punctuation.ttl> ;
line 358     mf:result    <IRI_with_all_punctuation.nt> ;
line 359     .
line 360  
line 361  <#bareword_a_predicate> rdf:type rdft:TestTurtleEval ;
line 362     mf:name      "bareword_a_predicate" ;
line 363     rdfs:comment "bareword a predicate" ;
line 364     rdft:approval rdft:Approved ;
line 365     mf:action    <bareword_a_predicate.ttl> ;
line 366     mf:result    <bareword_a_predicate.nt> ;
line 367     .
line 368  
line 369  <#old_style_prefix> rdf:type rdft:TestTurtleEval ;
line 370     mf:name      "old_style_prefix" ;
line 371     rdfs:comment "old-style prefix" ;
line 372     rdft:approval rdft:Approved ;
line 373     mf:action    <old_style_prefix.ttl> ;
line 374     mf:result    <IRI_spo.nt> ;
line 375     .
line 376  
line 377  <#SPARQL_style_prefix> rdf:type rdft:TestTurtleEval ;
line 378     mf:name      "SPARQL_style_prefix" ;
line 379     rdfs:comment "SPARQL-style prefix" ;
line 380     rdft:approval rdft:Approved ;
line 381     mf:action    <SPARQL_style_prefix.ttl> ;
line 382     mf:result    <IRI_spo.nt> ;
line 383     .
line 384  
line 385  <#prefixed_IRI_predicate> rdf:type rdft:TestTurtleEval ;
line 386     mf:name      "prefixed_IRI_predicate" ;
line 387     rdfs:comment "prefixed IRI predicate" ;
line 388     rdft:approval rdft:Approved ;
line 389     mf:action    <prefixed_IRI_predicate.ttl> ;
line 390     mf:result    <IRI_spo.nt> ;
line 391     .
line 392  
line 393  <#prefixed_IRI_object> rdf:type rdft:TestTurtleEval ;
line 394     mf:name      "prefixed_IRI_object" ;
line 395     rdfs:comment "prefixed IRI object" ;
line 396     rdft:approval rdft:Approved ;
line 397     mf:action    <prefixed_IRI_object.ttl> ;
line 398     mf:result    <IRI_spo.nt> ;
line 399     .
line 400  
line 401  <#prefix_only_IRI> rdf:type rdft:TestTurtleEval ;
line 402     mf:name      "prefix_only_IRI" ;
line 403     rdfs:comment "prefix-only IRI (p:)" ;
line 404     rdft:approval rdft:Approved ;
line 405     mf:action    <prefix_only_IRI.ttl> ;
line 406     mf:result    <IRI_spo.nt> ;
line 407     .
line 408  
line 409  <#prefix_with_PN_CHARS_BASE_character_boundaries> rdf:type rdft:TestTurtleEval ;
line 410     mf:name      "prefix_with_PN_CHARS_BASE_character_boundaries" ;
line 411     rdfs:comment "prefix with PN CHARS BASE character boundaries (prefix: AZazÀÖØöø...:)" ;
line 412     rdft:approval rdft:Approved ;
line 413     mf:action    <prefix_with_PN_CHARS_BASE_character_boundaries.ttl> ;
line 414     mf:result    <IRI_spo.nt> ;
line 415     .
line 416  
line 417  <#prefix_with_non_leading_extras> rdf:type rdft:TestTurtleEval ;
line 418     mf:name      "prefix_with_non_leading_extras" ;
line 419     rdfs:comment "prefix with_non_leading_extras (_:a·̀ͯ‿.⁀)" ;
line 420     rdft:approval rdft:Approved ;
line 421     mf:action    <prefix_with_non_leading_extras.ttl> ;
line 422     mf:result    <IRI_spo.nt> ;
line 423     .
line 424  
line 425  <#localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries> rdf:type rdft:TestTurtleEval ;
line 426     mf:name      "localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries" ;
line 427     rdfs:comment "localName with assigned, NFC-normalized, basic-multilingual-plane PN CHARS BASE character boundaries (p:AZazÀÖØöø...)" ;
line 428     rdft:approval rdft:Approved ;
line 429     mf:action    <localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.ttl> ;
line 430     mf:result    <localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.nt> ;
line 431     .
line 432  
line 433  <#localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries> rdf:type rdft:TestTurtleEval ;
line 434     mf:name      "localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries" ;
line 435     rdfs:comment "localName with assigned, NFC-normalized PN CHARS BASE character boundaries (p:AZazÀÖØöø...)" ;
line 436     rdft:approval rdft:Approved ;
line 437     mf:action    <localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.ttl> ;
line 438     mf:result    <localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.nt> ;
line 439     .
line 440  
line 441  <#localName_with_nfc_PN_CHARS_BASE_character_boundaries> rdf:type rdft:TestTurtleEval ;
line 442     mf:name      "localName_with_nfc_PN_CHARS_BASE_character_boundaries" ;
line 443     rdfs:comment "localName with nfc-normalize PN CHARS BASE character boundaries (p:AZazÀÖØöø...)" ;
line 444     rdft:approval rdft:Approved ;
line 445     mf:action    <localName_with_nfc_PN_CHARS_BASE_character_boundaries.ttl> ;
line 446     mf:result    <localName_with_nfc_PN_CHARS_BASE_character_boundaries.nt> ;
line 447     .
line 448  
line 449  <#default_namespace_IRI> rdf:type rdft:TestTurtleEval ;
line 450     mf:name      "default_namespace_IRI" ;
line 451     rdfs:comment "default namespace IRI (:ln)" ;
line 452     rdft:approval rdft:Approved ;
line 453     mf:action    <default_namespace_IRI.ttl> ;
line 454     mf:result    <IRI_spo.nt> ;
line 455     .
line 456  
line 457  <#prefix_reassigned_and_used> rdf:type rdft:TestTurtleEval ;
line 458     mf:name      "prefix_reassigned_and_used" ;
line 459     rdfs:comment "prefix reassigned and used" ;
line 460     rdft:approval rdft:Approved ;
line 461     mf:action    <prefix_reassigned_and_used.ttl> ;
line 462     mf:result    <prefix_reassigned_and_used.nt> ;
line 463     .
line 464  
line 465  <#reserved_escaped_localName> rdf:type rdft:TestTurtleEval ;
line 466     mf:name      "reserved_escaped_localName" ;
line 467     rdfs:comment "reserved-escaped local name" ;
line 468     rdft:approval rdft:Approved ;
line 469     mf:action    <reserved_escaped_localName.ttl> ;
line 470     mf:result    <reserved_escaped_localName.nt> ;
line 471     .
line 472  
line 473  <#percent_escaped_localName> rdf:type rdft:TestTurtleEval ;
line 474     mf:name      "percent_escaped_localName" ;
line 475     rdfs:comment "percent-escaped local name" ;
line 476     rdft:approval rdft:Approved ;
line 477     mf:action    <percent_escaped_localName.ttl> ;
line 478     mf:result    <percent_escaped_localName.nt> ;
line 479     .
line 480  
line 481  <#HYPHEN_MINUS_in_localName> rdf:type rdft:TestTurtleEval ;
line 482     mf:name      "HYPHEN_MINUS_in_localName" ;
line 483     rdfs:comment "HYPHEN-MINUS in local name" ;
line 484     rdft:approval rdft:Approved ;
line 485     mf:action    <HYPHEN_MINUS_in_localName.ttl> ;
line 486     mf:result    <HYPHEN_MINUS_in_localName.nt> ;
line 487     .
line 488  
line 489  <#underscore_in_localName> rdf:type rdft:TestTurtleEval ;
line 490     mf:name      "underscore_in_localName" ;
line 491     rdfs:comment "underscore in local name" ;
line 492     rdft:approval rdft:Approved ;
line 493     mf:action    <underscore_in_localName.ttl> ;
line 494     mf:result    <underscore_in_localName.nt> ;
line 495     .
line 496  
line 497  <#localname_with_COLON> rdf:type rdft:TestTurtleEval ;
line 498     mf:name      "localname_with_COLON" ;
line 499     rdfs:comment "localname with COLON" ;
line 500     rdft:approval rdft:Approved ;
line 501     mf:action    <localname_with_COLON.ttl> ;
line 502     mf:result    <localname_with_COLON.nt> ;
line 503     .
line 504  
line 505  <#localName_with_leading_underscore> rdf:type rdft:TestTurtleEval ;
line 506     mf:name      "localName_with_leading_underscore" ;
line 507     rdfs:comment "localName with leading underscore (p:_)" ;
line 508     rdft:approval rdft:Approved ;
line 509     mf:action    <localName_with_leading_underscore.ttl> ;
line 510     mf:result    <localName_with_leading_underscore.nt> ;
line 511     .
line 512  
line 513  <#localName_with_leading_digit> rdf:type rdft:TestTurtleEval ;
line 514     mf:name      "localName_with_leading_digit" ;
line 515     rdfs:comment "localName with leading digit (p:_)" ;
line 516     rdft:approval rdft:Approved ;
line 517     mf:action    <localName_with_leading_digit.ttl> ;
line 518     mf:result    <localName_with_leading_digit.nt> ;
line 519     .
line 520  
line 521  <#localName_with_non_leading_extras> rdf:type rdft:TestTurtleEval ;
line 522     mf:name      "localName_with_non_leading_extras" ;
line 523     rdfs:comment "localName with_non_leading_extras (_:a·̀ͯ‿.⁀)" ;
line 524     rdft:approval rdft:Approved ;
line 525     mf:action    <localName_with_non_leading_extras.ttl> ;
line 526     mf:result    <localName_with_non_leading_extras.nt> ;
line 527     .
line 528  
line 529  <#old_style_base> rdf:type rdft:TestTurtleEval ;
line 530     mf:name      "old_style_base" ;
line 531     rdfs:comment "old-style base" ;
line 532     rdft:approval rdft:Approved ;
line 533     mf:action    <old_style_base.ttl> ;
line 534     mf:result    <IRI_spo.nt> ;
line 535     .
line 536  
line 537  <#SPARQL_style_base> rdf:type rdft:TestTurtleEval ;
line 538     mf:name      "SPARQL_style_base" ;
line 539     rdfs:comment "SPARQL-style base" ;
line 540     rdft:approval rdft:Approved ;
line 541     mf:action    <SPARQL_style_base.ttl> ;
line 542     mf:result    <IRI_spo.nt> ;
line 543     .
line 544  
line 545  <#labeled_blank_node_subject> rdf:type rdft:TestTurtleEval ;
line 546     mf:name      "labeled_blank_node_subject" ;
line 547     rdfs:comment "labeled blank node subject" ;
line 548     rdft:approval rdft:Approved ;
line 549     mf:action    <labeled_blank_node_subject.ttl> ;
line 550     mf:result    <labeled_blank_node_subject.nt> ;
line 551     .
line 552  
line 553  <#labeled_blank_node_object> rdf:type rdft:TestTurtleEval ;
line 554     mf:name      "labeled_blank_node_object" ;
line 555     rdfs:comment "labeled blank node object" ;
line 556     rdft:approval rdft:Approved ;
line 557     mf:action    <labeled_blank_node_object.ttl> ;
line 558     mf:result    <labeled_blank_node_object.nt> ;
line 559     .
line 560  
line 561  <#labeled_blank_node_with_PN_CHARS_BASE_character_boundaries> rdf:type rdft:TestTurtleEval ;
line 562     mf:name      "labeled_blank_node_with_PN_CHARS_BASE_character_boundaries" ;
line 563     rdfs:comment "labeled blank node with PN_CHARS_BASE character boundaries (_:AZazÀÖØöø...)" ;
line 564     rdft:approval rdft:Approved ;
line 565     mf:action    <labeled_blank_node_with_PN_CHARS_BASE_character_boundaries.ttl> ;
line 566     mf:result    <labeled_blank_node_object.nt> ;
line 567     .
line 568  
line 569  <#labeled_blank_node_with_leading_underscore> rdf:type rdft:TestTurtleEval ;
line 570     mf:name      "labeled_blank_node_with_leading_underscore" ;
line 571     rdfs:comment "labeled blank node with_leading_underscore (_:_)" ;
line 572     rdft:approval rdft:Approved ;
line 573     mf:action    <labeled_blank_node_with_leading_underscore.ttl> ;
line 574     mf:result    <labeled_blank_node_object.nt> ;
line 575     .
line 576  
line 577  <#labeled_blank_node_with_leading_digit> rdf:type rdft:TestTurtleEval ;
line 578     mf:name      "labeled_blank_node_with_leading_digit" ;
line 579     rdfs:comment "labeled blank node with_leading_digit (_:0)" ;
line 580     rdft:approval rdft:Approved ;
line 581     mf:action    <labeled_blank_node_with_leading_digit.ttl> ;
line 582     mf:result    <labeled_blank_node_object.nt> ;
line 583     .
line 584  
line 585  <#labeled_blank_node_with_non_leading_extras> rdf:type rdft:TestTurtleEval ;
line 586     mf:name      "labeled_blank_node_with_non_leading_extras" ;
line 587     rdfs:comment "labeled blank node with_non_leading_extras (_:a·̀ͯ‿.⁀)" ;
line 588     rdft:approval rdft:Approved ;
line 589     mf:action    <labeled_blank_node_with_non_leading_extras.ttl> ;
line 590     mf:result    <labeled_blank_node_object.nt> ;
line 591     .
line 592  
line 593  <#anonymous_blank_node_subject> rdf:type rdft:TestTurtleEval ;
line 594     mf:name      "anonymous_blank_node_subject" ;
line 595     rdfs:comment "anonymous blank node subject" ;
line 596     rdft:approval rdft:Approved ;
line 597     mf:action    <anonymous_blank_node_subject.ttl> ;
line 598     mf:result    <labeled_blank_node_subject.nt> ;
line 599     .
line 600  
line 601  <#anonymous_blank_node_object> rdf:type rdft:TestTurtleEval ;
line 602     mf:name      "anonymous_blank_node_object" ;
line 603     rdfs:comment "anonymous blank node object" ;
line 604     rdft:approval rdft:Approved ;
line 605     mf:action    <anonymous_blank_node_object.ttl> ;
line 606     mf:result    <labeled_blank_node_object.nt> ;
line 607     .
line 608  
line 609  <#sole_blankNodePropertyList> rdf:type rdft:TestTurtleEval ;
line 610     mf:name      "sole_blankNodePropertyList" ;
line 611     rdfs:comment "sole blankNodePropertyList [ <p> <o> ] ." ;
line 612     rdft:approval rdft:Approved ;
line 613     mf:action    <sole_blankNodePropertyList.ttl> ;
line 614     mf:result    <labeled_blank_node_subject.nt> ;
line 615     .
line 616  
line 617  <#blankNodePropertyList_as_subject> rdf:type rdft:TestTurtleEval ;
line 618     mf:name      "blankNodePropertyList_as_subject" ;
line 619     rdfs:comment "blankNodePropertyList as subject [ … ] <p> <o> ." ;
line 620     rdft:approval rdft:Approved ;
line 621     mf:action    <blankNodePropertyList_as_subject.ttl> ;
line 622     mf:result    <blankNodePropertyList_as_subject.nt> ;
line 623     .
line 624  
line 625  <#blankNodePropertyList_as_object> rdf:type rdft:TestTurtleEval ;
line 626     mf:name      "blankNodePropertyList_as_object" ;
line 627     rdfs:comment "blankNodePropertyList as object <s> <p> [ … ] ." ;
line 628     rdft:approval rdft:Approved ;
line 629     mf:action    <blankNodePropertyList_as_object.ttl> ;
line 630     mf:result    <blankNodePropertyList_as_object.nt> ;
line 631     .
line 632  
line 633  <#blankNodePropertyList_with_multiple_triples> rdf:type rdft:TestTurtleEval ;
line 634     mf:name      "blankNodePropertyList_with_multiple_triples" ;
line 635     rdfs:comment "blankNodePropertyList with multiple triples [ <s> <p> ; <s2> <p2> ]" ;
line 636     rdft:approval rdft:Approved ;
line 637     mf:action    <blankNodePropertyList_with_multiple_triples.ttl> ;
line 638     mf:result    <blankNodePropertyList_with_multiple_triples.nt> ;
line 639     .
line 640  
line 641  <#nested_blankNodePropertyLists> rdf:type rdft:TestTurtleEval ;
line 642     mf:name      "nested_blankNodePropertyLists" ;
line 643     rdfs:comment "nested blankNodePropertyLists [ <p1> [ <p2> <o2> ] ; <p3> <o3> ]" ;
line 644     rdft:approval rdft:Approved ;
line 645     mf:action    <nested_blankNodePropertyLists.ttl> ;
line 646     mf:result    <nested_blankNodePropertyLists.nt> ;
line 647     .
line 648  
line 649  <#blankNodePropertyList_containing_collection> rdf:type rdft:TestTurtleEval ;
line 650     mf:name      "blankNodePropertyList_containing_collection" ;
line 651     rdfs:comment "blankNodePropertyList containing collection [ <p1> ( … ) ]" ;
line 652     rdft:approval rdft:Approved ;
line 653     mf:action    <blankNodePropertyList_containing_collection.ttl> ;
line 654     mf:result    <blankNodePropertyList_containing_collection.nt> ;
line 655     .
line 656  
line 657  <#collection_subject> rdf:type rdft:TestTurtleEval ;
line 658     mf:name      "collection_subject" ;
line 659     rdfs:comment "collection subject" ;
line 660     rdft:approval rdft:Approved ;
line 661     mf:action    <collection_subject.ttl> ;
line 662     mf:result    <collection_subject.nt> ;
line 663     .
line 664  
line 665  <#collection_object> rdf:type rdft:TestTurtleEval ;
line 666     mf:name      "collection_object" ;
line 667     rdfs:comment "collection object" ;
line 668     rdft:approval rdft:Approved ;
line 669     mf:action    <collection_object.ttl> ;
line 670     mf:result    <collection_object.nt> ;
line 671     .
line 672  
line 673  <#empty_collection> rdf:type rdft:TestTurtleEval ;
line 674     mf:name      "empty_collection" ;
line 675     rdfs:comment "empty collection ()" ;
line 676     rdft:approval rdft:Approved ;
line 677     mf:action    <empty_collection.ttl> ;
line 678     mf:result    <empty_collection.nt> ;
line 679     .
line 680  
line 681  <#nested_collection> rdf:type rdft:TestTurtleEval ;
line 682     mf:name      "nested_collection" ;
line 683     rdfs:comment "nested collection (())" ;
line 684     rdft:approval rdft:Approved ;
line 685     mf:action    <nested_collection.ttl> ;
line 686     mf:result    <nested_collection.nt> ;
line 687     .
line 688  
line 689  <#first> rdf:type rdft:TestTurtleEval ;
line 690     mf:name      "first" ;
line 691     rdfs:comment "first, not last, non-empty nested collection" ;
line 692     rdft:approval rdft:Approved ;
line 693     mf:action    <first.ttl> ;
line 694     mf:result    <first.nt> ;
line 695     .
line 696  
line 697  <#last> rdf:type rdft:TestTurtleEval ;
line 698     mf:name      "last" ;
line 699     rdfs:comment "last, not first, non-empty nested collection" ;
line 700     rdft:approval rdft:Approved ;
line 701     mf:action    <last.ttl> ;
line 702     mf:result    <last.nt> ;
line 703     .
line 704  
line 705  <#LITERAL1> rdf:type rdft:TestTurtleEval ;
line 706     mf:name      "LITERAL1" ;
line 707     rdfs:comment "LITERAL1 'x'" ;
line 708     rdft:approval rdft:Approved ;
line 709     mf:action    <LITERAL1.ttl> ;
line 710     mf:result    <LITERAL1.nt> ;
line 711     .
line 712  
line 713  <#LITERAL1_ascii_boundaries> rdf:type rdft:TestTurtleEval ;
line 714     mf:name      "LITERAL1_ascii_boundaries" ;
line 715     rdfs:comment "LITERAL1_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x26\\x28...'" ;
line 716     rdft:approval rdft:Approved ;
line 717     mf:action    <LITERAL1_ascii_boundaries.ttl> ;
line 718     mf:result    <LITERAL1_ascii_boundaries.nt> ;
line 719     .
line 720  
line 721  <#LITERAL1_with_UTF8_boundaries> rdf:type rdft:TestTurtleEval ;
line 722     mf:name      "LITERAL1_with_UTF8_boundaries" ;
line 723     rdfs:comment "LITERAL1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'" ;
line 724     rdft:approval rdft:Approved ;
line 725     mf:action    <LITERAL1_with_UTF8_boundaries.ttl> ;
line 726     mf:result    <LITERAL_with_UTF8_boundaries.nt> ;
line 727     .
line 728  
line 729  <#LITERAL1_all_controls> rdf:type rdft:TestTurtleEval ;
line 730     mf:name      "LITERAL1_all_controls" ;
line 731     rdfs:comment "LITERAL1_all_controls '\\x00\\x01\\x02\\x03\\x04...'" ;
line 732     rdft:approval rdft:Approved ;
line 733     mf:action    <LITERAL1_all_controls.ttl> ;
line 734     mf:result    <LITERAL1_all_controls.nt> ;
line 735     .
line 736  
line 737  <#LITERAL1_all_punctuation> rdf:type rdft:TestTurtleEval ;
line 738     mf:name      "LITERAL1_all_punctuation" ;
line 739     rdfs:comment "LITERAL1_all_punctuation '!\"#$%&()...'" ;
line 740     rdft:approval rdft:Approved ;
line 741     mf:action    <LITERAL1_all_punctuation.ttl> ;
line 742     mf:result    <LITERAL1_all_punctuation.nt> ;
line 743     .
line 744  
line 745  <#LITERAL_LONG1> rdf:type rdft:TestTurtleEval ;
line 746     mf:name      "LITERAL_LONG1" ;
line 747     rdfs:comment "LITERAL_LONG1 '''x'''" ;
line 748     rdft:approval rdft:Approved ;
line 749     mf:action    <LITERAL_LONG1.ttl> ;
line 750     mf:result    <LITERAL1.nt> ;
line 751     .
line 752  
line 753  <#LITERAL_LONG1_ascii_boundaries> rdf:type rdft:TestTurtleEval ;
line 754     mf:name      "LITERAL_LONG1_ascii_boundaries" ;
line 755     rdfs:comment "LITERAL_LONG1_ascii_boundaries '\\x00\\x26\\x28...'" ;
line 756     rdft:approval rdft:Approved ;
line 757     mf:action    <LITERAL_LONG1_ascii_boundaries.ttl> ;
line 758     mf:result    <LITERAL_LONG1_ascii_boundaries.nt> ;
line 759     .
line 760  
line 761  <#LITERAL_LONG1_with_UTF8_boundaries> rdf:type rdft:TestTurtleEval ;
line 762     mf:name      "LITERAL_LONG1_with_UTF8_boundaries" ;
line 763     rdfs:comment "LITERAL_LONG1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'" ;
line 764     rdft:approval rdft:Approved ;
line 765     mf:action    <LITERAL_LONG1_with_UTF8_boundaries.ttl> ;
line 766     mf:result    <LITERAL_with_UTF8_boundaries.nt> ;
line 767     .
line 768  
line 769  <#LITERAL_LONG1_with_1_squote> rdf:type rdft:TestTurtleEval ;
line 770     mf:name      "LITERAL_LONG1_with_1_squote" ;
line 771     rdfs:comment "LITERAL_LONG1 with 1 squote '''a'b'''" ;
line 772     rdft:approval rdft:Approved ;
line 773     mf:action    <LITERAL_LONG1_with_1_squote.ttl> ;
line 774     mf:result    <LITERAL_LONG1_with_1_squote.nt> ;
line 775     .
line 776  
line 777  <#LITERAL_LONG1_with_2_squotes> rdf:type rdft:TestTurtleEval ;
line 778     mf:name      "LITERAL_LONG1_with_2_squotes" ;
line 779     rdfs:comment "LITERAL_LONG1 with 2 squotes '''a''b'''" ;
line 780     rdft:approval rdft:Approved ;
line 781     mf:action    <LITERAL_LONG1_with_2_squotes.ttl> ;
line 782     mf:result    <LITERAL_LONG1_with_2_squotes.nt> ;
line 783     .
line 784  
line 785  <#LITERAL2> rdf:type rdft:TestTurtleEval ;
line 786     mf:name      "LITERAL2" ;
line 787     rdfs:comment "LITERAL2 \"x\"" ;
line 788     rdft:approval rdft:Approved ;
line 789     mf:action    <LITERAL2.ttl> ;
line 790     mf:result    <LITERAL1.nt> ;
line 791     .
line 792  
line 793  <#LITERAL2_ascii_boundaries> rdf:type rdft:TestTurtleEval ;
line 794     mf:name      "LITERAL2_ascii_boundaries" ;
line 795     rdfs:comment "LITERAL2_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x21\\x23...'" ;
line 796     rdft:approval rdft:Approved ;
line 797     mf:action    <LITERAL2_ascii_boundaries.ttl> ;
line 798     mf:result    <LITERAL2_ascii_boundaries.nt> ;
line 799     .
line 800  
line 801  <#LITERAL2_with_UTF8_boundaries> rdf:type rdft:TestTurtleEval ;
line 802     mf:name      "LITERAL2_with_UTF8_boundaries" ;
line 803     rdfs:comment "LITERAL2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'" ;
line 804     rdft:approval rdft:Approved ;
line 805     mf:action    <LITERAL2_with_UTF8_boundaries.ttl> ;
line 806     mf:result    <LITERAL_with_UTF8_boundaries.nt> ;
line 807     .
line 808  
line 809  <#LITERAL_LONG2> rdf:type rdft:TestTurtleEval ;
line 810     mf:name      "LITERAL_LONG2" ;
line 811     rdfs:comment "LITERAL_LONG2 \"\"\"x\"\"\"" ;
line 812     rdft:approval rdft:Approved ;
line 813     mf:action    <LITERAL_LONG2.ttl> ;
line 814     mf:result    <LITERAL1.nt> ;
line 815     .
line 816  
line 817  <#LITERAL_LONG2_ascii_boundaries> rdf:type rdft:TestTurtleEval ;
line 818     mf:name      "LITERAL_LONG2_ascii_boundaries" ;
line 819     rdfs:comment "LITERAL_LONG2_ascii_boundaries '\\x00\\x21\\x23...'" ;
line 820     rdft:approval rdft:Approved ;
line 821     mf:action    <LITERAL_LONG2_ascii_boundaries.ttl> ;
line 822     mf:result    <LITERAL_LONG2_ascii_boundaries.nt> ;
line 823     .
line 824  
line 825  <#LITERAL_LONG2_with_UTF8_boundaries> rdf:type rdft:TestTurtleEval ;
line 826     mf:name      "LITERAL_LONG2_with_UTF8_boundaries" ;
line 827     rdfs:comment "LITERAL_LONG2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'" ;
line 828     rdft:approval rdft:Approved ;
line 829     mf:action    <LITERAL_LONG2_with_UTF8_boundaries.ttl> ;
line 830     mf:result    <LITERAL_with_UTF8_boundaries.nt> ;
line 831     .
line 832  
line 833  <#LITERAL_LONG2_with_1_squote> rdf:type rdft:TestTurtleEval ;
line 834     mf:name      "LITERAL_LONG2_with_1_squote" ;
line 835     rdfs:comment "LITERAL_LONG2 with 1 squote \"\"\"a\"b\"\"\"" ;
line 836     rdft:approval rdft:Approved ;
line 837     mf:action    <LITERAL_LONG2_with_1_squote.ttl> ;
line 838     mf:result    <LITERAL_LONG2_with_1_squote.nt> ;
line 839     .
line 840  
line 841  <#LITERAL_LONG2_with_2_squotes> rdf:type rdft:TestTurtleEval ;
line 842     mf:name      "LITERAL_LONG2_with_2_squotes" ;
line 843     rdfs:comment "LITERAL_LONG2 with 2 squotes \"\"\"a\"\"b\"\"\"" ;
line 844     rdft:approval rdft:Approved ;
line 845     mf:action    <LITERAL_LONG2_with_2_squotes.ttl> ;
line 846     mf:result    <LITERAL_LONG2_with_2_squotes.nt> ;
line 847     .
line 848  
line 849  <#literal_with_CHARACTER_TABULATION> rdf:type rdft:TestTurtleEval ;
line 850     mf:name      "literal_with_CHARACTER_TABULATION" ;
line 851     rdfs:comment "literal with CHARACTER TABULATION" ;
line 852     rdft:approval rdft:Approved ;
line 853     mf:action    <literal_with_CHARACTER_TABULATION.ttl> ;
line 854     mf:result    <literal_with_CHARACTER_TABULATION.nt> ;
line 855     .
line 856  
line 857  <#literal_with_BACKSPACE> rdf:type rdft:TestTurtleEval ;
line 858     mf:name      "literal_with_BACKSPACE" ;
line 859     rdfs:comment "literal with BACKSPACE" ;
line 860     rdft:approval rdft:Approved ;
line 861     mf:action    <literal_with_BACKSPACE.ttl> ;
line 862     mf:result    <literal_with_BACKSPACE.nt> ;
line 863     .
line 864  
line 865  <#literal_with_LINE_FEED> rdf:type rdft:TestTurtleEval ;
line 866     mf:name      "literal_with_LINE_FEED" ;
line 867     rdfs:comment "literal with LINE FEED" ;
line 868     rdft:approval rdft:Approved ;
line 869     mf:action    <literal_with_LINE_FEED.ttl> ;
line 870     mf:result    <literal_with_LINE_FEED.nt> ;
line 871     .
line 872  
line 873  <#literal_with_CARRIAGE_RETURN> rdf:type rdft:TestTurtleEval ;
line 874     mf:name      "literal_with_CARRIAGE_RETURN" ;
line 875     rdfs:comment "literal with CARRIAGE RETURN" ;
line 876     rdft:approval rdft:Approved ;
line 877     mf:action    <literal_with_CARRIAGE_RETURN.ttl> ;
line 878     mf:result    <literal_with_CARRIAGE_RETURN.nt> ;
line 879     .
line 880  
line 881  <#literal_with_FORM_FEED> rdf:type rdft:TestTurtleEval ;
line 882     mf:name      "literal_with_FORM_FEED" ;
line 883     rdfs:comment "literal with FORM FEED" ;
line 884     rdft:approval rdft:Approved ;
line 885     mf:action    <literal_with_FORM_FEED.ttl> ;
line 886     mf:result    <literal_with_FORM_FEED.nt> ;
line 887     .
line 888  
line 889  <#literal_with_REVERSE_SOLIDUS> rdf:type rdft:TestTurtleEval ;
line 890     mf:name      "literal_with_REVERSE_SOLIDUS" ;
line 891     rdfs:comment "literal with REVERSE SOLIDUS" ;
line 892     rdft:approval rdft:Approved ;
line 893     mf:action    <literal_with_REVERSE_SOLIDUS.ttl> ;
line 894     mf:result    <literal_with_REVERSE_SOLIDUS.nt> ;
line 895     .
line 896  
line 897  <#literal_with_escaped_CHARACTER_TABULATION> rdf:type rdft:TestTurtleEval ;
line 898     mf:name      "literal_with_escaped_CHARACTER_TABULATION" ;
line 899     rdfs:comment "literal with escaped CHARACTER TABULATION" ;
line 900     rdft:approval rdft:Approved ;
line 901     mf:action    <literal_with_escaped_CHARACTER_TABULATION.ttl> ;
line 902     mf:result    <literal_with_CHARACTER_TABULATION.nt> ;
line 903     .
line 904  
line 905  <#literal_with_escaped_BACKSPACE> rdf:type rdft:TestTurtleEval ;
line 906     mf:name      "literal_with_escaped_BACKSPACE" ;
line 907     rdfs:comment "literal with escaped BACKSPACE" ;
line 908     rdft:approval rdft:Approved ;
line 909     mf:action    <literal_with_escaped_BACKSPACE.ttl> ;
line 910     mf:result    <literal_with_BACKSPACE.nt> ;
line 911     .
line 912  
line 913  <#literal_with_escaped_LINE_FEED> rdf:type rdft:TestTurtleEval ;
line 914     mf:name      "literal_with_escaped_LINE_FEED" ;
line 915     rdfs:comment "literal with escaped LINE FEED" ;
line 916     rdft:approval rdft:Approved ;
line 917     mf:action    <literal_with_escaped_LINE_FEED.ttl> ;
line 918     mf:result    <literal_with_LINE_FEED.nt> ;
line 919     .
line 920  
line 921  <#literal_with_escaped_CARRIAGE_RETURN> rdf:type rdft:TestTurtleEval ;
line 922     mf:name      "literal_with_escaped_CARRIAGE_RETURN" ;
line 923     rdfs:comment "literal with escaped CARRIAGE RETURN" ;
line 924     rdft:approval rdft:Approved ;
line 925     mf:action    <literal_with_escaped_CARRIAGE_RETURN.ttl> ;
line 926     mf:result    <literal_with_CARRIAGE_RETURN.nt> ;
line 927     .
line 928  
line 929  <#literal_with_escaped_FORM_FEED> rdf:type rdft:TestTurtleEval ;
line 930     mf:name      "literal_with_escaped_FORM_FEED" ;
line 931     rdfs:comment "literal with escaped FORM FEED" ;
line 932     rdft:approval rdft:Approved ;
line 933     mf:action    <literal_with_escaped_FORM_FEED.ttl> ;
line 934     mf:result    <literal_with_FORM_FEED.nt> ;
line 935     .
line 936  
line 937  <#literal_with_numeric_escape4> rdf:type rdft:TestTurtleEval ;
line 938     mf:name      "literal_with_numeric_escape4" ;
line 939     rdfs:comment "literal with numeric escape4 \\u" ;
line 940     rdft:approval rdft:Approved ;
line 941     mf:action    <literal_with_numeric_escape4.ttl> ;
line 942     mf:result    <literal_with_numeric_escape4.nt> ;
line 943     .
line 944  
line 945  <#literal_with_numeric_escape8> rdf:type rdft:TestTurtleEval ;
line 946     mf:name      "literal_with_numeric_escape8" ;
line 947     rdfs:comment "literal with numeric escape8 \\U" ;
line 948     rdft:approval rdft:Approved ;
line 949     mf:action    <literal_with_numeric_escape8.ttl> ;
line 950     mf:result    <literal_with_numeric_escape4.nt> ;
line 951     .
line 952  
line 953  <#IRIREF_datatype> rdf:type rdft:TestTurtleEval ;
line 954     mf:name      "IRIREF_datatype" ;
line 955     rdfs:comment "IRIREF datatype \"\"^^<t>" ;
line 956     rdft:approval rdft:Approved ;
line 957     mf:action    <IRIREF_datatype.ttl> ;
line 958     mf:result    <IRIREF_datatype.nt> ;
line 959     .
line 960  
line 961  <#prefixed_name_datatype> rdf:type rdft:TestTurtleEval ;
line 962     mf:name      "prefixed_name_datatype" ;
line 963     rdfs:comment "prefixed name datatype \"\"^^p:t" ;
line 964     rdft:approval rdft:Approved ;
line 965     mf:action    <prefixed_name_datatype.ttl> ;
line 966     mf:result    <IRIREF_datatype.nt> ;
line 967     .
line 968  
line 969  <#bareword_integer> rdf:type rdft:TestTurtleEval ;
line 970     mf:name      "bareword_integer" ;
line 971     rdfs:comment "bareword integer" ;
line 972     rdft:approval rdft:Approved ;
line 973     mf:action    <bareword_integer.ttl> ;
line 974     mf:result    <IRIREF_datatype.nt> ;
line 975     .
line 976  
line 977  <#bareword_decimal> rdf:type rdft:TestTurtleEval ;
line 978     mf:name      "bareword_decimal" ;
line 979     rdfs:comment "bareword decimal" ;
line 980     rdft:approval rdft:Approved ;
line 981     mf:action    <bareword_decimal.ttl> ;
line 982     mf:result    <bareword_decimal.nt> ;
line 983     .
line 984  
line 985  <#bareword_double> rdf:type rdft:TestTurtleEval ;
line 986     mf:name      "bareword_double" ;
line 987     rdfs:comment "bareword double" ;
line 988     rdft:approval rdft:Approved ;
line 989     mf:action    <bareword_double.ttl> ;
line 990     mf:result    <bareword_double.nt> ;
line 991     .
line 992  
line 993  <#double_lower_case_e> rdf:type rdft:TestTurtleEval ;
line 994     mf:name      "double_lower_case_e" ;
line 995     rdfs:comment "double lower case e" ;
line 996     rdft:approval rdft:Approved ;
line 997     mf:action    <double_lower_case_e.ttl> ;
line 998     mf:result    <double_lower_case_e.nt> ;
line 999     .
line 1000  
line 1001  <#negative_numeric> rdf:type rdft:TestTurtleEval ;
line 1002     mf:name      "negative_numeric" ;
line 1003     rdfs:comment "negative numeric" ;
line 1004     rdft:approval rdft:Approved ;
line 1005     mf:action    <negative_numeric.ttl> ;
line 1006     mf:result    <negative_numeric.nt> ;
line 1007     .
line 1008  
line 1009  <#positive_numeric> rdf:type rdft:TestTurtleEval ;
line 1010     mf:name      "positive_numeric" ;
line 1011     rdfs:comment "positive numeric" ;
line 1012     rdft:approval rdft:Approved ;
line 1013     mf:action    <positive_numeric.ttl> ;
line 1014     mf:result    <positive_numeric.nt> ;
line 1015     .
line 1016  
line 1017  <#numeric_with_leading_0> rdf:type rdft:TestTurtleEval ;
line 1018     mf:name      "numeric_with_leading_0" ;
line 1019     rdfs:comment "numeric with leading 0" ;
line 1020     rdft:approval rdft:Approved ;
line 1021     mf:action    <numeric_with_leading_0.ttl> ;
line 1022     mf:result    <numeric_with_leading_0.nt> ;
line 1023     .
line 1024  
line 1025  <#literal_true> rdf:type rdft:TestTurtleEval ;
line 1026     mf:name      "literal_true" ;
line 1027     rdfs:comment "literal true" ;
line 1028     rdft:approval rdft:Approved ;
line 1029     mf:action    <literal_true.ttl> ;
line 1030     mf:result    <literal_true.nt> ;
line 1031     .
line 1032  
line 1033  <#literal_false> rdf:type rdft:TestTurtleEval ;
line 1034     mf:name      "literal_false" ;
line 1035     rdfs:comment "literal false" ;
line 1036     rdft:approval rdft:Approved ;
line 1037     mf:action    <literal_false.ttl> ;
line 1038     mf:result    <literal_false.nt> ;
line 1039     .
line 1040  
line 1041  <#langtagged_non_LONG> rdf:type rdft:TestTurtleEval ;
line 1042     mf:name      "langtagged_non_LONG" ;
line 1043     rdfs:comment "langtagged non-LONG \"x\"@en" ;
line 1044     rdft:approval rdft:Approved ;
line 1045     mf:action    <langtagged_non_LONG.ttl> ;
line 1046     mf:result    <langtagged_non_LONG.nt> ;
line 1047     .
line 1048  
line 1049  <#langtagged_LONG> rdf:type rdft:TestTurtleEval ;
line 1050     mf:name      "langtagged_LONG" ;
line 1051     rdfs:comment "langtagged LONG \"\"\"x\"\"\"@en" ;
line 1052     rdft:approval rdft:Approved ;
line 1053     mf:action    <langtagged_LONG.ttl> ;
line 1054     mf:result    <langtagged_non_LONG.nt> ;
line 1055     .
line 1056  
line 1057  <#lantag_with_subtag> rdf:type rdft:TestTurtleEval ;
line 1058     mf:name      "lantag_with_subtag" ;
line 1059     rdfs:comment "lantag with subtag \"x\"@en-us" ;
line 1060     rdft:approval rdft:Approved ;
line 1061     mf:action    <lantag_with_subtag.ttl> ;
line 1062     mf:result    <lantag_with_subtag.nt> ;
line 1063     .
line 1064  
line 1065  <#objectList_with_two_objects> rdf:type rdft:TestTurtleEval ;
line 1066     mf:name      "objectList_with_two_objects" ;
line 1067     rdfs:comment "objectList with two objects … <o1>,<o2>" ;
line 1068     rdft:approval rdft:Approved ;
line 1069     mf:action    <objectList_with_two_objects.ttl> ;
line 1070     mf:result    <objectList_with_two_objects.nt> ;
line 1071     .
line 1072  
line 1073  <#predicateObjectList_with_two_objectLists> rdf:type rdft:TestTurtleEval ;
line 1074     mf:name      "predicateObjectList_with_two_objectLists" ;
line 1075     rdfs:comment "predicateObjectList with two objectLists … <o1>,<o2>" ;
line 1076     rdft:approval rdft:Approved ;
line 1077     mf:action    <predicateObjectList_with_two_objectLists.ttl> ;
line 1078     mf:result    <predicateObjectList_with_two_objectLists.nt> ;
line 1079     .
line 1080  
line 1081  <#repeated_semis_at_end> rdf:type rdft:TestTurtleEval ;
line 1082     mf:name      "repeated_semis_at_end" ;
line 1083     rdfs:comment "repeated semis at end <s> <p> <o> ;; <p2> <o2> ." ;
line 1084     rdft:approval rdft:Approved ;
line 1085     mf:action    <repeated_semis_at_end.ttl> ;
line 1086     mf:result    <predicateObjectList_with_two_objectLists.nt> ;
line 1087     .
line 1088  
line 1089  <#repeated_semis_not_at_end> rdf:type rdft:TestTurtleEval ;
line 1090     mf:name      "repeated_semis_not_at_end" ;
line 1091     rdfs:comment "repeated semis not at end <s> <p> <o> ;;." ;
line 1092     rdft:approval rdft:Approved ;
line 1093     mf:action    <repeated_semis_not_at_end.ttl> ;
line 1094     mf:result    <repeated_semis_not_at_end.nt> ;
line 1095     .
line 1096  
line 1097  # original tests-ttl
line 1098  <#turtle-syntax-file-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1099     mf:name    "turtle-syntax-file-01" ;
line 1100     rdfs:comment "Empty file" ;
line 1101     rdft:approval rdft:Approved ;
line 1102     mf:action    <turtle-syntax-file-01.ttl> ;
line 1103     .
line 1104  
line 1105  <#turtle-syntax-file-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1106     mf:name    "turtle-syntax-file-02" ;
line 1107     rdfs:comment "Only comment" ;
line 1108     rdft:approval rdft:Approved ;
line 1109     mf:action    <turtle-syntax-file-02.ttl> ;
line 1110     .
line 1111  
line 1112  <#turtle-syntax-file-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1113     mf:name    "turtle-syntax-file-03" ;
line 1114     rdfs:comment "One comment, one empty line" ;
line 1115     rdft:approval rdft:Approved ;
line 1116     mf:action    <turtle-syntax-file-03.ttl> ;
line 1117     .
line 1118  
line 1119  <#turtle-syntax-uri-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1120     mf:name    "turtle-syntax-uri-01" ;
line 1121     rdfs:comment "Only IRIs" ;
line 1122     rdft:approval rdft:Approved ;
line 1123     mf:action    <turtle-syntax-uri-01.ttl> ;
line 1124     .
line 1125  
line 1126  <#turtle-syntax-uri-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1127     mf:name    "turtle-syntax-uri-02" ;
line 1128     rdfs:comment "IRIs with Unicode escape" ;
line 1129     rdft:approval rdft:Approved ;
line 1130     mf:action    <turtle-syntax-uri-02.ttl> ;
line 1131     .
line 1132  
line 1133  <#turtle-syntax-uri-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1134     mf:name    "turtle-syntax-uri-03" ;
line 1135     rdfs:comment "IRIs with long Unicode escape" ;
line 1136     rdft:approval rdft:Approved ;
line 1137     mf:action    <turtle-syntax-uri-03.ttl> ;
line 1138     .
line 1139  
line 1140  <#turtle-syntax-uri-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1141     mf:name    "turtle-syntax-uri-04" ;
line 1142     rdfs:comment "Legal IRIs" ;
line 1143     rdft:approval rdft:Approved ;
line 1144     mf:action    <turtle-syntax-uri-04.ttl> ;
line 1145     .
line 1146  
line 1147  <#turtle-syntax-base-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1148     mf:name    "turtle-syntax-base-01" ;
line 1149     rdfs:comment "@base" ;
line 1150     rdft:approval rdft:Approved ;
line 1151     mf:action    <turtle-syntax-base-01.ttl> ;
line 1152     .
line 1153  
line 1154  <#turtle-syntax-base-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1155     mf:name    "turtle-syntax-base-02" ;
line 1156     rdfs:comment "BASE" ;
line 1157     rdft:approval rdft:Approved ;
line 1158     mf:action    <turtle-syntax-base-02.ttl> ;
line 1159     .
line 1160  
line 1161  <#turtle-syntax-base-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1162     mf:name    "turtle-syntax-base-03" ;
line 1163     rdfs:comment "@base with relative IRIs" ;
line 1164     rdft:approval rdft:Approved ;
line 1165     mf:action    <turtle-syntax-base-03.ttl> ;
line 1166     .
line 1167  
line 1168  <#turtle-syntax-base-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1169     mf:name    "turtle-syntax-base-04" ;
line 1170     rdfs:comment "base with relative IRIs" ;
line 1171     rdft:approval rdft:Approved ;
line 1172     mf:action    <turtle-syntax-base-04.ttl> ;
line 1173     .
line 1174  
line 1175  <#turtle-syntax-prefix-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1176     mf:name    "turtle-syntax-prefix-01" ;
line 1177     rdfs:comment "@prefix" ;
line 1178     rdft:approval rdft:Approved ;
line 1179     mf:action    <turtle-syntax-prefix-01.ttl> ;
line 1180     .
line 1181  
line 1182  <#turtle-syntax-prefix-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1183     mf:name    "turtle-syntax-prefix-02" ;
line 1184     rdfs:comment "PreFIX" ;
line 1185     rdft:approval rdft:Approved ;
line 1186     mf:action    <turtle-syntax-prefix-02.ttl> ;
line 1187     .
line 1188  
line 1189  <#turtle-syntax-prefix-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1190     mf:name    "turtle-syntax-prefix-03" ;
line 1191     rdfs:comment "Empty PREFIX" ;
line 1192     rdft:approval rdft:Approved ;
line 1193     mf:action    <turtle-syntax-prefix-03.ttl> ;
line 1194     .
line 1195  
line 1196  <#turtle-syntax-prefix-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1197     mf:name    "turtle-syntax-prefix-04" ;
line 1198     rdfs:comment "Empty @prefix with % escape" ;
line 1199     rdft:approval rdft:Approved ;
line 1200     mf:action    <turtle-syntax-prefix-04.ttl> ;
line 1201     .
line 1202  
line 1203  <#turtle-syntax-prefix-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1204     mf:name    "turtle-syntax-prefix-05" ;
line 1205     rdfs:comment "@prefix with no suffix" ;
line 1206     rdft:approval rdft:Approved ;
line 1207     mf:action    <turtle-syntax-prefix-05.ttl> ;
line 1208     .
line 1209  
line 1210  <#turtle-syntax-prefix-06> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1211     mf:name    "turtle-syntax-prefix-06" ;
line 1212     rdfs:comment "colon is a legal pname character" ;
line 1213     rdft:approval rdft:Approved ;
line 1214     mf:action    <turtle-syntax-prefix-06.ttl> ;
line 1215     .
line 1216  
line 1217  <#turtle-syntax-prefix-07> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1218     mf:name    "turtle-syntax-prefix-07" ;
line 1219     rdfs:comment "dash is a legal pname character" ;
line 1220     rdft:approval rdft:Approved ;
line 1221     mf:action    <turtle-syntax-prefix-07.ttl> ;
line 1222     .
line 1223  
line 1224  <#turtle-syntax-prefix-08> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1225     mf:name    "turtle-syntax-prefix-08" ;
line 1226     rdfs:comment "underscore is a legal pname character" ;
line 1227     rdft:approval rdft:Approved ;
line 1228     mf:action    <turtle-syntax-prefix-08.ttl> ;
line 1229     .
line 1230  
line 1231  <#turtle-syntax-prefix-09> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1232     mf:name    "turtle-syntax-prefix-09" ;
line 1233     rdfs:comment "percents in pnames" ;
line 1234     rdft:approval rdft:Approved ;
line 1235     mf:action    <turtle-syntax-prefix-09.ttl> ;
line 1236     .
line 1237  
line 1238  <#turtle-syntax-string-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1239     mf:name    "turtle-syntax-string-01" ;
line 1240     rdfs:comment "string literal" ;
line 1241     rdft:approval rdft:Approved ;
line 1242     mf:action    <turtle-syntax-string-01.ttl> ;
line 1243     .
line 1244  
line 1245  <#turtle-syntax-string-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1246     mf:name    "turtle-syntax-string-02" ;
line 1247     rdfs:comment "langString literal" ;
line 1248     rdft:approval rdft:Approved ;
line 1249     mf:action    <turtle-syntax-string-02.ttl> ;
line 1250     .
line 1251  
line 1252  <#turtle-syntax-string-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1253     mf:name    "turtle-syntax-string-03" ;
line 1254     rdfs:comment "langString literal with region" ;
line 1255     rdft:approval rdft:Approved ;
line 1256     mf:action    <turtle-syntax-string-03.ttl> ;
line 1257     .
line 1258  
line 1259  <#turtle-syntax-string-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1260     mf:name    "turtle-syntax-string-04" ;
line 1261     rdfs:comment "squote string literal" ;
line 1262     rdft:approval rdft:Approved ;
line 1263     mf:action    <turtle-syntax-string-04.ttl> ;
line 1264     .
line 1265  
line 1266  <#turtle-syntax-string-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1267     mf:name    "turtle-syntax-string-05" ;
line 1268     rdfs:comment "squote langString literal" ;
line 1269     rdft:approval rdft:Approved ;
line 1270     mf:action    <turtle-syntax-string-05.ttl> ;
line 1271     .
line 1272  
line 1273  <#turtle-syntax-string-06> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1274     mf:name    "turtle-syntax-string-06" ;
line 1275     rdfs:comment "squote langString literal with region" ;
line 1276     rdft:approval rdft:Approved ;
line 1277     mf:action    <turtle-syntax-string-06.ttl> ;
line 1278     .
line 1279  
line 1280  <#turtle-syntax-string-07> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1281     mf:name    "turtle-syntax-string-07" ;
line 1282     rdfs:comment "long string literal with embedded single- and double-quotes" ;
line 1283     rdft:approval rdft:Approved ;
line 1284     mf:action    <turtle-syntax-string-07.ttl> ;
line 1285     .
line 1286  
line 1287  <#turtle-syntax-string-08> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1288     mf:name    "turtle-syntax-string-08" ;
line 1289     rdfs:comment "long string literal with embedded newline" ;
line 1290     rdft:approval rdft:Approved ;
line 1291     mf:action    <turtle-syntax-string-08.ttl> ;
line 1292     .
line 1293  
line 1294  <#turtle-syntax-string-09> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1295     mf:name    "turtle-syntax-string-09" ;
line 1296     rdfs:comment "squote long string literal with embedded single- and double-quotes" ;
line 1297     rdft:approval rdft:Approved ;
line 1298     mf:action    <turtle-syntax-string-09.ttl> ;
line 1299     .
line 1300  
line 1301  <#turtle-syntax-string-10> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1302     mf:name    "turtle-syntax-string-10" ;
line 1303     rdfs:comment "long langString literal with embedded newline" ;
line 1304     rdft:approval rdft:Approved ;
line 1305     mf:action    <turtle-syntax-string-10.ttl> ;
line 1306     .
line 1307  
line 1308  <#turtle-syntax-string-11> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1309     mf:name    "turtle-syntax-string-11" ;
line 1310     rdfs:comment "squote long langString literal with embedded newline" ;
line 1311     rdft:approval rdft:Approved ;
line 1312     mf:action    <turtle-syntax-string-11.ttl> ;
line 1313     .
line 1314  
line 1315  <#turtle-syntax-str-esc-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1316     mf:name    "turtle-syntax-str-esc-01" ;
line 1317     rdfs:comment "string literal with escaped newline" ;
line 1318     rdft:approval rdft:Approved ;
line 1319     mf:action    <turtle-syntax-str-esc-01.ttl> ;
line 1320     .
line 1321  
line 1322  <#turtle-syntax-str-esc-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1323     mf:name    "turtle-syntax-str-esc-02" ;
line 1324     rdfs:comment "string literal with Unicode escape" ;
line 1325     rdft:approval rdft:Approved ;
line 1326     mf:action    <turtle-syntax-str-esc-02.ttl> ;
line 1327     .
line 1328  
line 1329  <#turtle-syntax-str-esc-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1330     mf:name    "turtle-syntax-str-esc-03" ;
line 1331     rdfs:comment "string literal with long Unicode escape" ;
line 1332     rdft:approval rdft:Approved ;
line 1333     mf:action    <turtle-syntax-str-esc-03.ttl> ;
line 1334     .
line 1335  
line 1336  <#turtle-syntax-pname-esc-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1337     mf:name    "turtle-syntax-pname-esc-01" ;
line 1338     rdfs:comment "pname with back-slash escapes" ;
line 1339     rdft:approval rdft:Approved ;
line 1340     mf:action    <turtle-syntax-pname-esc-01.ttl> ;
line 1341     .
line 1342  
line 1343  <#turtle-syntax-pname-esc-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1344     mf:name    "turtle-syntax-pname-esc-02" ;
line 1345     rdfs:comment "pname with back-slash escapes (2)" ;
line 1346     rdft:approval rdft:Approved ;
line 1347     mf:action    <turtle-syntax-pname-esc-02.ttl> ;
line 1348     .
line 1349  
line 1350  <#turtle-syntax-pname-esc-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1351     mf:name    "turtle-syntax-pname-esc-03" ;
line 1352     rdfs:comment "pname with back-slash escapes (3)" ;
line 1353     rdft:approval rdft:Approved ;
line 1354     mf:action    <turtle-syntax-pname-esc-03.ttl> ;
line 1355     .
line 1356  
line 1357  <#turtle-syntax-bnode-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1358     mf:name    "turtle-syntax-bnode-01" ;
line 1359     rdfs:comment "bnode subject" ;
line 1360     rdft:approval rdft:Approved ;
line 1361     mf:action    <turtle-syntax-bnode-01.ttl> ;
line 1362     .
line 1363  
line 1364  <#turtle-syntax-bnode-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1365     mf:name    "turtle-syntax-bnode-02" ;
line 1366     rdfs:comment "bnode object" ;
line 1367     rdft:approval rdft:Approved ;
line 1368     mf:action    <turtle-syntax-bnode-02.ttl> ;
line 1369     .
line 1370  
line 1371  <#turtle-syntax-bnode-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1372     mf:name    "turtle-syntax-bnode-03" ;
line 1373     rdfs:comment "bnode property list object" ;
line 1374     rdft:approval rdft:Approved ;
line 1375     mf:action    <turtle-syntax-bnode-03.ttl> ;
line 1376     .
line 1377  
line 1378  <#turtle-syntax-bnode-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1379     mf:name    "turtle-syntax-bnode-04" ;
line 1380     rdfs:comment "bnode property list object (2)" ;
line 1381     rdft:approval rdft:Approved ;
line 1382     mf:action    <turtle-syntax-bnode-04.ttl> ;
line 1383     .
line 1384  
line 1385  <#turtle-syntax-bnode-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1386     mf:name    "turtle-syntax-bnode-05" ;
line 1387     rdfs:comment "bnode property list subject" ;
line 1388     rdft:approval rdft:Approved ;
line 1389     mf:action    <turtle-syntax-bnode-05.ttl> ;
line 1390     .
line 1391  
line 1392  <#turtle-syntax-bnode-06> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1393     mf:name    "turtle-syntax-bnode-06" ;
line 1394     rdfs:comment "labeled bnode subject" ;
line 1395     rdft:approval rdft:Approved ;
line 1396     mf:action    <turtle-syntax-bnode-06.ttl> ;
line 1397     .
line 1398  
line 1399  <#turtle-syntax-bnode-07> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1400     mf:name    "turtle-syntax-bnode-07" ;
line 1401     rdfs:comment "labeled bnode subject and object" ;
line 1402     rdft:approval rdft:Approved ;
line 1403     mf:action    <turtle-syntax-bnode-07.ttl> ;
line 1404     .
line 1405  
line 1406  <#turtle-syntax-bnode-08> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1407     mf:name    "turtle-syntax-bnode-08" ;
line 1408     rdfs:comment "bare bnode property list" ;
line 1409     rdft:approval rdft:Approved ;
line 1410     mf:action    <turtle-syntax-bnode-08.ttl> ;
line 1411     .
line 1412  
line 1413  <#turtle-syntax-bnode-09> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1414     mf:name    "turtle-syntax-bnode-09" ;
line 1415     rdfs:comment "bnode property list" ;
line 1416     rdft:approval rdft:Approved ;
line 1417     mf:action    <turtle-syntax-bnode-09.ttl> ;
line 1418     .
line 1419  
line 1420  <#turtle-syntax-bnode-10> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1421     mf:name    "turtle-syntax-bnode-10" ;
line 1422     rdfs:comment "mixed bnode property list and triple" ;
line 1423     rdft:approval rdft:Approved ;
line 1424     mf:action    <turtle-syntax-bnode-10.ttl> ;
line 1425     .
line 1426  
line 1427  <#turtle-syntax-number-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1428     mf:name    "turtle-syntax-number-01" ;
line 1429     rdfs:comment "integer literal" ;
line 1430     rdft:approval rdft:Approved ;
line 1431     mf:action    <turtle-syntax-number-01.ttl> ;
line 1432     .
line 1433  
line 1434  <#turtle-syntax-number-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1435     mf:name    "turtle-syntax-number-02" ;
line 1436     rdfs:comment "negative integer literal" ;
line 1437     rdft:approval rdft:Approved ;
line 1438     mf:action    <turtle-syntax-number-02.ttl> ;
line 1439     .
line 1440  
line 1441  <#turtle-syntax-number-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1442     mf:name    "turtle-syntax-number-03" ;
line 1443     rdfs:comment "positive integer literal" ;
line 1444     rdft:approval rdft:Approved ;
line 1445     mf:action    <turtle-syntax-number-03.ttl> ;
line 1446     .
line 1447  
line 1448  <#turtle-syntax-number-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1449     mf:name    "turtle-syntax-number-04" ;
line 1450     rdfs:comment "decimal literal" ;
line 1451     rdft:approval rdft:Approved ;
line 1452     mf:action    <turtle-syntax-number-04.ttl> ;
line 1453     .
line 1454  
line 1455  <#turtle-syntax-number-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1456     mf:name    "turtle-syntax-number-05" ;
line 1457     rdfs:comment "decimal literal (no leading digits)" ;
line 1458     rdft:approval rdft:Approved ;
line 1459     mf:action    <turtle-syntax-number-05.ttl> ;
line 1460     .
line 1461  
line 1462  <#turtle-syntax-number-06> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1463     mf:name    "turtle-syntax-number-06" ;
line 1464     rdfs:comment "negative decimal literal" ;
line 1465     rdft:approval rdft:Approved ;
line 1466     mf:action    <turtle-syntax-number-06.ttl> ;
line 1467     .
line 1468  
line 1469  <#turtle-syntax-number-07> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1470     mf:name    "turtle-syntax-number-07" ;
line 1471     rdfs:comment "positive decimal literal" ;
line 1472     rdft:approval rdft:Approved ;
line 1473     mf:action    <turtle-syntax-number-07.ttl> ;
line 1474     .
line 1475  
line 1476  <#turtle-syntax-number-08> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1477     mf:name    "turtle-syntax-number-08" ;
line 1478     rdfs:comment "integer literal with decimal lexical confusion" ;
line 1479     rdft:approval rdft:Approved ;
line 1480     mf:action    <turtle-syntax-number-08.ttl> ;
line 1481     .
line 1482  
line 1483  <#turtle-syntax-number-09> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1484     mf:name    "turtle-syntax-number-09" ;
line 1485     rdfs:comment "double literal" ;
line 1486     rdft:approval rdft:Approved ;
line 1487     mf:action    <turtle-syntax-number-09.ttl> ;
line 1488     .
line 1489  
line 1490  <#turtle-syntax-number-10> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1491     mf:name    "turtle-syntax-number-10" ;
line 1492     rdfs:comment "negative double literal" ;
line 1493     rdft:approval rdft:Approved ;
line 1494     mf:action    <turtle-syntax-number-10.ttl> ;
line 1495     .
line 1496  
line 1497  <#turtle-syntax-number-11> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1498     mf:name    "turtle-syntax-number-11" ;
line 1499     rdfs:comment "double literal no fraction" ;
line 1500     rdft:approval rdft:Approved ;
line 1501     mf:action    <turtle-syntax-number-11.ttl> ;
line 1502     .
line 1503  
line 1504  <#turtle-syntax-datatypes-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1505     mf:name    "turtle-syntax-datatypes-01" ;
line 1506     rdfs:comment "xsd:byte literal" ;
line 1507     rdft:approval rdft:Approved ;
line 1508     mf:action    <turtle-syntax-datatypes-01.ttl> ;
line 1509     .
line 1510  
line 1511  <#turtle-syntax-datatypes-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1512     mf:name    "turtle-syntax-datatypes-02" ;
line 1513     rdfs:comment "integer as xsd:string" ;
line 1514     rdft:approval rdft:Approved ;
line 1515     mf:action    <turtle-syntax-datatypes-02.ttl> ;
line 1516     .
line 1517  
line 1518  <#turtle-syntax-kw-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1519     mf:name    "turtle-syntax-kw-01" ;
line 1520     rdfs:comment "boolean literal (true)" ;
line 1521     rdft:approval rdft:Approved ;
line 1522     mf:action    <turtle-syntax-kw-01.ttl> ;
line 1523     .
line 1524  
line 1525  <#turtle-syntax-kw-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1526     mf:name    "turtle-syntax-kw-02" ;
line 1527     rdfs:comment "boolean literal (false)" ;
line 1528     rdft:approval rdft:Approved ;
line 1529     mf:action    <turtle-syntax-kw-02.ttl> ;
line 1530     .
line 1531  
line 1532  <#turtle-syntax-kw-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1533     mf:name    "turtle-syntax-kw-03" ;
line 1534     rdfs:comment "'a' as keyword" ;
line 1535     rdft:approval rdft:Approved ;
line 1536     mf:action    <turtle-syntax-kw-03.ttl> ;
line 1537     .
line 1538  
line 1539  <#turtle-syntax-struct-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1540     mf:name    "turtle-syntax-struct-01" ;
line 1541     rdfs:comment "object list" ;
line 1542     rdft:approval rdft:Approved ;
line 1543     mf:action    <turtle-syntax-struct-01.ttl> ;
line 1544     .
line 1545  
line 1546  <#turtle-syntax-struct-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1547     mf:name    "turtle-syntax-struct-02" ;
line 1548     rdfs:comment "predicate list with object list" ;
line 1549     rdft:approval rdft:Approved ;
line 1550     mf:action    <turtle-syntax-struct-02.ttl> ;
line 1551     .
line 1552  
line 1553  <#turtle-syntax-struct-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1554     mf:name    "turtle-syntax-struct-03" ;
line 1555     rdfs:comment "predicate list with object list and dangling ';'" ;
line 1556     rdft:approval rdft:Approved ;
line 1557     mf:action    <turtle-syntax-struct-03.ttl> ;
line 1558     .
line 1559  
line 1560  <#turtle-syntax-struct-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1561     mf:name    "turtle-syntax-struct-04" ;
line 1562     rdfs:comment "predicate list with multiple ;;" ;
line 1563     rdft:approval rdft:Approved ;
line 1564     mf:action    <turtle-syntax-struct-04.ttl> ;
line 1565     .
line 1566  
line 1567  <#turtle-syntax-struct-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1568     mf:name    "turtle-syntax-struct-05" ;
line 1569     rdfs:comment "predicate list with multiple ;;" ;
line 1570     rdft:approval rdft:Approved ;
line 1571     mf:action    <turtle-syntax-struct-05.ttl> ;
line 1572     .
line 1573  
line 1574  <#turtle-syntax-lists-01> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1575     mf:name    "turtle-syntax-lists-01" ;
line 1576     rdfs:comment "empty list" ;
line 1577     rdft:approval rdft:Approved ;
line 1578     mf:action    <turtle-syntax-lists-01.ttl> ;
line 1579     .
line 1580  
line 1581  <#turtle-syntax-lists-02> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1582     mf:name    "turtle-syntax-lists-02" ;
line 1583     rdfs:comment "mixed list" ;
line 1584     rdft:approval rdft:Approved ;
line 1585     mf:action    <turtle-syntax-lists-02.ttl> ;
line 1586     .
line 1587  
line 1588  <#turtle-syntax-lists-03> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1589     mf:name    "turtle-syntax-lists-03" ;
line 1590     rdfs:comment "isomorphic list as subject and object" ;
line 1591     rdft:approval rdft:Approved ;
line 1592     mf:action    <turtle-syntax-lists-03.ttl> ;
line 1593     .
line 1594  
line 1595  <#turtle-syntax-lists-04> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1596     mf:name    "turtle-syntax-lists-04" ;
line 1597     rdfs:comment "lists of lists" ;
line 1598     rdft:approval rdft:Approved ;
line 1599     mf:action    <turtle-syntax-lists-04.ttl> ;
line 1600     .
line 1601  
line 1602  <#turtle-syntax-lists-05> rdf:type rdft:TestTurtlePositiveSyntax ;
line 1603     mf:name    "turtle-syntax-lists-05" ;
line 1604     rdfs:comment "mixed lists with embedded lists" ;
line 1605     rdft:approval rdft:Approved ;
line 1606     mf:action    <turtle-syntax-lists-05.ttl> ;
line 1607     .
line 1608  
line 1609  <#turtle-syntax-bad-uri-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1610     mf:name    "turtle-syntax-bad-uri-01" ;
line 1611     rdfs:comment "Bad IRI : space (negative test)" ;
line 1612     rdft:approval rdft:Approved ;
line 1613     mf:action    <turtle-syntax-bad-uri-01.ttl> ;
line 1614     .
line 1615  
line 1616  <#turtle-syntax-bad-uri-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1617     mf:name    "turtle-syntax-bad-uri-02" ;
line 1618     rdfs:comment "Bad IRI : bad escape (negative test)" ;
line 1619     rdft:approval rdft:Approved ;
line 1620     mf:action    <turtle-syntax-bad-uri-02.ttl> ;
line 1621     .
line 1622  
line 1623  <#turtle-syntax-bad-uri-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1624     mf:name    "turtle-syntax-bad-uri-03" ;
line 1625     rdfs:comment "Bad IRI : bad long escape (negative test)" ;
line 1626     rdft:approval rdft:Approved ;
line 1627     mf:action    <turtle-syntax-bad-uri-03.ttl> ;
line 1628     .
line 1629  
line 1630  <#turtle-syntax-bad-uri-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1631     mf:name    "turtle-syntax-bad-uri-04" ;
line 1632     rdfs:comment "Bad IRI : character escapes not allowed (negative test)" ;
line 1633     rdft:approval rdft:Approved ;
line 1634     mf:action    <turtle-syntax-bad-uri-04.ttl> ;
line 1635     .
line 1636  
line 1637  <#turtle-syntax-bad-uri-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1638     mf:name    "turtle-syntax-bad-uri-05" ;
line 1639     rdfs:comment "Bad IRI : character escapes not allowed (2) (negative test)" ;
line 1640     rdft:approval rdft:Approved ;
line 1641     mf:action    <turtle-syntax-bad-uri-05.ttl> ;
line 1642     .
line 1643  
line 1644  <#turtle-syntax-bad-prefix-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1645     mf:name    "turtle-syntax-bad-prefix-01" ;
line 1646     rdfs:comment "No prefix (negative test)" ;
line 1647     rdft:approval rdft:Approved ;
line 1648     mf:action    <turtle-syntax-bad-prefix-01.ttl> ;
line 1649     .
line 1650  
line 1651  <#turtle-syntax-bad-prefix-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1652     mf:name    "turtle-syntax-bad-prefix-02" ;
line 1653     rdfs:comment "No prefix (2) (negative test)" ;
line 1654     rdft:approval rdft:Approved ;
line 1655     mf:action    <turtle-syntax-bad-prefix-02.ttl> ;
line 1656     .
line 1657  
line 1658  <#turtle-syntax-bad-prefix-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1659     mf:name    "turtle-syntax-bad-prefix-03" ;
line 1660     rdfs:comment "@prefix without URI (negative test)" ;
line 1661     rdft:approval rdft:Approved ;
line 1662     mf:action    <turtle-syntax-bad-prefix-03.ttl> ;
line 1663     .
line 1664  
line 1665  <#turtle-syntax-bad-prefix-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1666     mf:name    "turtle-syntax-bad-prefix-04" ;
line 1667     rdfs:comment "@prefix without prefix name (negative test)" ;
line 1668     rdft:approval rdft:Approved ;
line 1669     mf:action    <turtle-syntax-bad-prefix-04.ttl> ;
line 1670     .
line 1671  
line 1672  <#turtle-syntax-bad-prefix-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1673     mf:name    "turtle-syntax-bad-prefix-05" ;
line 1674     rdfs:comment "@prefix without ':' (negative test)" ;
line 1675     rdft:approval rdft:Approved ;
line 1676     mf:action    <turtle-syntax-bad-prefix-05.ttl> ;
line 1677     .
line 1678  
line 1679  <#turtle-syntax-bad-base-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1680     mf:name    "turtle-syntax-bad-base-01" ;
line 1681     rdfs:comment "@base without URI (negative test)" ;
line 1682     rdft:approval rdft:Approved ;
line 1683     mf:action    <turtle-syntax-bad-base-01.ttl> ;
line 1684     .
line 1685  
line 1686  <#turtle-syntax-bad-base-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1687     mf:name    "turtle-syntax-bad-base-02" ;
line 1688     rdfs:comment "@base in wrong case (negative test)" ;
line 1689     rdft:approval rdft:Approved ;
line 1690     mf:action    <turtle-syntax-bad-base-02.ttl> ;
line 1691     .
line 1692  
line 1693  <#turtle-syntax-bad-base-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1694     mf:name    "turtle-syntax-bad-base-03" ;
line 1695     rdfs:comment "BASE without URI (negative test)" ;
line 1696     rdft:approval rdft:Approved ;
line 1697     mf:action    <turtle-syntax-bad-base-03.ttl> ;
line 1698     .
line 1699  
line 1700  <#turtle-syntax-bad-struct-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1701     mf:name    "turtle-syntax-bad-struct-01" ;
line 1702     rdfs:comment "Turtle is not TriG (negative test)" ;
line 1703     rdft:approval rdft:Approved ;
line 1704     mf:action    <turtle-syntax-bad-struct-01.ttl> ;
line 1705     .
line 1706  
line 1707  <#turtle-syntax-bad-struct-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1708     mf:name    "turtle-syntax-bad-struct-02" ;
line 1709     rdfs:comment "Turtle is not N3 (negative test)" ;
line 1710     rdft:approval rdft:Approved ;
line 1711     mf:action    <turtle-syntax-bad-struct-02.ttl> ;
line 1712     .
line 1713  
line 1714  <#turtle-syntax-bad-struct-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1715     mf:name    "turtle-syntax-bad-struct-03" ;
line 1716     rdfs:comment "Turtle is not NQuads (negative test)" ;
line 1717     rdft:approval rdft:Approved ;
line 1718     mf:action    <turtle-syntax-bad-struct-03.ttl> ;
line 1719     .
line 1720  
line 1721  <#turtle-syntax-bad-struct-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1722     mf:name    "turtle-syntax-bad-struct-04" ;
line 1723     rdfs:comment "Turtle does not allow literals-as-subjects (negative test)" ;
line 1724     rdft:approval rdft:Approved ;
line 1725     mf:action    <turtle-syntax-bad-struct-04.ttl> ;
line 1726     .
line 1727  
line 1728  <#turtle-syntax-bad-struct-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1729     mf:name    "turtle-syntax-bad-struct-05" ;
line 1730     rdfs:comment "Turtle does not allow literals-as-predicates (negative test)" ;
line 1731     rdft:approval rdft:Approved ;
line 1732     mf:action    <turtle-syntax-bad-struct-05.ttl> ;
line 1733     .
line 1734  
line 1735  <#turtle-syntax-bad-struct-06> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1736     mf:name    "turtle-syntax-bad-struct-06" ;
line 1737     rdfs:comment "Turtle does not allow bnodes-as-predicates (negative test)" ;
line 1738     rdft:approval rdft:Approved ;
line 1739     mf:action    <turtle-syntax-bad-struct-06.ttl> ;
line 1740     .
line 1741  
line 1742  <#turtle-syntax-bad-struct-07> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1743     mf:name    "turtle-syntax-bad-struct-07" ;
line 1744     rdfs:comment "Turtle does not allow labeled bnodes-as-predicates (negative test)" ;
line 1745     rdft:approval rdft:Approved ;
line 1746     mf:action    <turtle-syntax-bad-struct-07.ttl> ;
line 1747     .
line 1748  
line 1749  <#turtle-syntax-bad-kw-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1750     mf:name    "turtle-syntax-bad-kw-01" ;
line 1751     rdfs:comment "'A' is not a keyword (negative test)" ;
line 1752     rdft:approval rdft:Approved ;
line 1753     mf:action    <turtle-syntax-bad-kw-01.ttl> ;
line 1754     .
line 1755  
line 1756  <#turtle-syntax-bad-kw-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1757     mf:name    "turtle-syntax-bad-kw-02" ;
line 1758     rdfs:comment "'a' cannot be used as subject (negative test)" ;
line 1759     rdft:approval rdft:Approved ;
line 1760     mf:action    <turtle-syntax-bad-kw-02.ttl> ;
line 1761     .
line 1762  
line 1763  <#turtle-syntax-bad-kw-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1764     mf:name    "turtle-syntax-bad-kw-03" ;
line 1765     rdfs:comment "'a' cannot be used as object (negative test)" ;
line 1766     rdft:approval rdft:Approved ;
line 1767     mf:action    <turtle-syntax-bad-kw-03.ttl> ;
line 1768     .
line 1769  
line 1770  <#turtle-syntax-bad-kw-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1771     mf:name    "turtle-syntax-bad-kw-04" ;
line 1772     rdfs:comment "'true' cannot be used as subject (negative test)" ;
line 1773     rdft:approval rdft:Approved ;
line 1774     mf:action    <turtle-syntax-bad-kw-04.ttl> ;
line 1775     .
line 1776  
line 1777  <#turtle-syntax-bad-kw-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1778     mf:name    "turtle-syntax-bad-kw-05" ;
line 1779     rdfs:comment "'true' cannot be used as object (negative test)" ;
line 1780     rdft:approval rdft:Approved ;
line 1781     mf:action    <turtle-syntax-bad-kw-05.ttl> ;
line 1782     .
line 1783  
line 1784  <#turtle-syntax-bad-n3-extras-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1785     mf:name    "turtle-syntax-bad-n3-extras-01" ;
line 1786     rdfs:comment "{} fomulae not in Turtle (negative test)" ;
line 1787     rdft:approval rdft:Approved ;
line 1788     mf:action    <turtle-syntax-bad-n3-extras-01.ttl> ;
line 1789     .
line 1790  
line 1791  <#turtle-syntax-bad-n3-extras-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1792     mf:name    "turtle-syntax-bad-n3-extras-02" ;
line 1793     rdfs:comment "= is not Turtle (negative test)" ;
line 1794     rdft:approval rdft:Approved ;
line 1795     mf:action    <turtle-syntax-bad-n3-extras-02.ttl> ;
line 1796     .
line 1797  
line 1798  <#turtle-syntax-bad-n3-extras-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1799     mf:name    "turtle-syntax-bad-n3-extras-03" ;
line 1800     rdfs:comment "N3 paths not in Turtle (negative test)" ;
line 1801     rdft:approval rdft:Approved ;
line 1802     mf:action    <turtle-syntax-bad-n3-extras-03.ttl> ;
line 1803     .
line 1804  
line 1805  <#turtle-syntax-bad-n3-extras-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1806     mf:name    "turtle-syntax-bad-n3-extras-04" ;
line 1807     rdfs:comment "N3 paths not in Turtle (negative test)" ;
line 1808     rdft:approval rdft:Approved ;
line 1809     mf:action    <turtle-syntax-bad-n3-extras-04.ttl> ;
line 1810     .
line 1811  
line 1812  <#turtle-syntax-bad-n3-extras-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1813     mf:name    "turtle-syntax-bad-n3-extras-05" ;
line 1814     rdfs:comment "N3 is...of not in Turtle (negative test)" ;
line 1815     rdft:approval rdft:Approved ;
line 1816     mf:action    <turtle-syntax-bad-n3-extras-05.ttl> ;
line 1817     .
line 1818  
line 1819  <#turtle-syntax-bad-n3-extras-06> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1820     mf:name    "turtle-syntax-bad-n3-extras-06" ;
line 1821     rdfs:comment "N3 paths not in Turtle (negative test)" ;
line 1822     rdft:approval rdft:Approved ;
line 1823     mf:action    <turtle-syntax-bad-n3-extras-06.ttl> ;
line 1824     .
line 1825  
line 1826  <#turtle-syntax-bad-n3-extras-07> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1827     mf:name    "turtle-syntax-bad-n3-extras-07" ;
line 1828     rdfs:comment "@keywords is not Turtle (negative test)" ;
line 1829     rdft:approval rdft:Approved ;
line 1830     mf:action    <turtle-syntax-bad-n3-extras-07.ttl> ;
line 1831     .
line 1832  
line 1833  <#turtle-syntax-bad-n3-extras-08> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1834     mf:name    "turtle-syntax-bad-n3-extras-08" ;
line 1835     rdfs:comment "@keywords is not Turtle (negative test)" ;
line 1836     rdft:approval rdft:Approved ;
line 1837     mf:action    <turtle-syntax-bad-n3-extras-08.ttl> ;
line 1838     .
line 1839  
line 1840  <#turtle-syntax-bad-n3-extras-09> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1841     mf:name    "turtle-syntax-bad-n3-extras-09" ;
line 1842     rdfs:comment "=> is not Turtle (negative test)" ;
line 1843     rdft:approval rdft:Approved ;
line 1844     mf:action    <turtle-syntax-bad-n3-extras-09.ttl> ;
line 1845     .
line 1846  
line 1847  <#turtle-syntax-bad-n3-extras-10> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1848     mf:name    "turtle-syntax-bad-n3-extras-10" ;
line 1849     rdfs:comment "<= is not Turtle (negative test)" ;
line 1850     rdft:approval rdft:Approved ;
line 1851     mf:action    <turtle-syntax-bad-n3-extras-10.ttl> ;
line 1852     .
line 1853  
line 1854  <#turtle-syntax-bad-n3-extras-11> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1855     mf:name    "turtle-syntax-bad-n3-extras-11" ;
line 1856     rdfs:comment "@forSome is not Turtle (negative test)" ;
line 1857     rdft:approval rdft:Approved ;
line 1858     mf:action    <turtle-syntax-bad-n3-extras-11.ttl> ;
line 1859     .
line 1860  
line 1861  <#turtle-syntax-bad-n3-extras-12> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1862     mf:name    "turtle-syntax-bad-n3-extras-12" ;
line 1863     rdfs:comment "@forAll is not Turtle (negative test)" ;
line 1864     rdft:approval rdft:Approved ;
line 1865     mf:action    <turtle-syntax-bad-n3-extras-12.ttl> ;
line 1866     .
line 1867  
line 1868  <#turtle-syntax-bad-n3-extras-13> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1869     mf:name    "turtle-syntax-bad-n3-extras-13" ;
line 1870     rdfs:comment "@keywords is not Turtle (negative test)" ;
line 1871     rdft:approval rdft:Approved ;
line 1872     mf:action    <turtle-syntax-bad-n3-extras-13.ttl> ;
line 1873     .
line 1874  
line 1875  <#turtle-syntax-bad-struct-08> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1876     mf:name    "turtle-syntax-bad-struct-08" ;
line 1877     rdfs:comment "missing '.' (negative test)" ;
line 1878     rdft:approval rdft:Approved ;
line 1879     mf:action    <turtle-syntax-bad-struct-08.ttl> ;
line 1880     .
line 1881  
line 1882  <#turtle-syntax-bad-struct-09> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1883     mf:name    "turtle-syntax-bad-struct-09" ;
line 1884     rdfs:comment "extra '.' (negative test)" ;
line 1885     rdft:approval rdft:Approved ;
line 1886     mf:action    <turtle-syntax-bad-struct-09.ttl> ;
line 1887     .
line 1888  
line 1889  <#turtle-syntax-bad-struct-10> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1890     mf:name    "turtle-syntax-bad-struct-10" ;
line 1891     rdfs:comment "extra '.' (negative test)" ;
line 1892     rdft:approval rdft:Approved ;
line 1893     mf:action    <turtle-syntax-bad-struct-10.ttl> ;
line 1894     .
line 1895  
line 1896  <#turtle-syntax-bad-struct-11> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1897     mf:name    "turtle-syntax-bad-struct-11" ;
line 1898     rdfs:comment "trailing ';' no '.' (negative test)" ;
line 1899     rdft:approval rdft:Approved ;
line 1900     mf:action    <turtle-syntax-bad-struct-11.ttl> ;
line 1901     .
line 1902  
line 1903  <#turtle-syntax-bad-struct-12> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1904     mf:name    "turtle-syntax-bad-struct-12" ;
line 1905     rdfs:comment "subject, predicate, no object (negative test)" ;
line 1906     rdft:approval rdft:Approved ;
line 1907     mf:action    <turtle-syntax-bad-struct-12.ttl> ;
line 1908     .
line 1909  
line 1910  <#turtle-syntax-bad-struct-13> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1911     mf:name    "turtle-syntax-bad-struct-13" ;
line 1912     rdfs:comment "subject, predicate, no object (negative test)" ;
line 1913     rdft:approval rdft:Approved ;
line 1914     mf:action    <turtle-syntax-bad-struct-13.ttl> ;
line 1915     .
line 1916  
line 1917  <#turtle-syntax-bad-struct-14> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1918     mf:name    "turtle-syntax-bad-struct-14" ;
line 1919     rdfs:comment "literal as subject (negative test)" ;
line 1920     rdft:approval rdft:Approved ;
line 1921     mf:action    <turtle-syntax-bad-struct-14.ttl> ;
line 1922     .
line 1923  
line 1924  <#turtle-syntax-bad-struct-15> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1925     mf:name    "turtle-syntax-bad-struct-15" ;
line 1926     rdfs:comment "literal as predicate (negative test)" ;
line 1927     rdft:approval rdft:Approved ;
line 1928     mf:action    <turtle-syntax-bad-struct-15.ttl> ;
line 1929     .
line 1930  
line 1931  <#turtle-syntax-bad-struct-16> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1932     mf:name    "turtle-syntax-bad-struct-16" ;
line 1933     rdfs:comment "bnode as predicate (negative test)" ;
line 1934     rdft:approval rdft:Approved ;
line 1935     mf:action    <turtle-syntax-bad-struct-16.ttl> ;
line 1936     .
line 1937  
line 1938  <#turtle-syntax-bad-struct-17> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1939     mf:name    "turtle-syntax-bad-struct-17" ;
line 1940     rdfs:comment "labeled bnode as predicate (negative test)" ;
line 1941     rdft:approval rdft:Approved ;
line 1942     mf:action    <turtle-syntax-bad-struct-17.ttl> ;
line 1943     .
line 1944  
line 1945  <#turtle-syntax-bad-lang-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1946     mf:name    "turtle-syntax-bad-lang-01" ;
line 1947     rdfs:comment "langString with bad lang (negative test)" ;
line 1948     rdft:approval rdft:Approved ;
line 1949     mf:action    <turtle-syntax-bad-lang-01.ttl> ;
line 1950     .
line 1951  
line 1952  <#turtle-syntax-bad-esc-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1953     mf:name    "turtle-syntax-bad-esc-01" ;
line 1954     rdfs:comment "Bad string escape (negative test)" ;
line 1955     rdft:approval rdft:Approved ;
line 1956     mf:action    <turtle-syntax-bad-esc-01.ttl> ;
line 1957     .
line 1958  
line 1959  <#turtle-syntax-bad-esc-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1960     mf:name    "turtle-syntax-bad-esc-02" ;
line 1961     rdfs:comment "Bad string escape (negative test)" ;
line 1962     rdft:approval rdft:Approved ;
line 1963     mf:action    <turtle-syntax-bad-esc-02.ttl> ;
line 1964     .
line 1965  
line 1966  <#turtle-syntax-bad-esc-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1967     mf:name    "turtle-syntax-bad-esc-03" ;
line 1968     rdfs:comment "Bad string escape (negative test)" ;
line 1969     rdft:approval rdft:Approved ;
line 1970     mf:action    <turtle-syntax-bad-esc-03.ttl> ;
line 1971     .
line 1972  
line 1973  <#turtle-syntax-bad-esc-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1974     mf:name    "turtle-syntax-bad-esc-04" ;
line 1975     rdfs:comment "Bad string escape (negative test)" ;
line 1976     rdft:approval rdft:Approved ;
line 1977     mf:action    <turtle-syntax-bad-esc-04.ttl> ;
line 1978     .
line 1979  
line 1980  <#turtle-syntax-bad-pname-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1981     mf:name    "turtle-syntax-bad-pname-01" ;
line 1982     rdfs:comment "'~' must be escaped in pname (negative test)" ;
line 1983     rdft:approval rdft:Approved ;
line 1984     mf:action    <turtle-syntax-bad-pname-01.ttl> ;
line 1985     .
line 1986  
line 1987  <#turtle-syntax-bad-pname-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1988     mf:name    "turtle-syntax-bad-pname-02" ;
line 1989     rdfs:comment "Bad %-sequence in pname (negative test)" ;
line 1990     rdft:approval rdft:Approved ;
line 1991     mf:action    <turtle-syntax-bad-pname-02.ttl> ;
line 1992     .
line 1993  
line 1994  <#turtle-syntax-bad-pname-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 1995     mf:name    "turtle-syntax-bad-pname-03" ;
line 1996     rdfs:comment "Bad unicode escape in pname (negative test)" ;
line 1997     rdft:approval rdft:Approved ;
line 1998     mf:action    <turtle-syntax-bad-pname-03.ttl> ;
line 1999     .
line 2000  
line 2001  <#turtle-syntax-bad-string-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2002     mf:name    "turtle-syntax-bad-string-01" ;
line 2003     rdfs:comment "mismatching string literal open/close (negative test)" ;
line 2004     rdft:approval rdft:Approved ;
line 2005     mf:action    <turtle-syntax-bad-string-01.ttl> ;
line 2006     .
line 2007  
line 2008  <#turtle-syntax-bad-string-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2009     mf:name    "turtle-syntax-bad-string-02" ;
line 2010     rdfs:comment "mismatching string literal open/close (negative test)" ;
line 2011     rdft:approval rdft:Approved ;
line 2012     mf:action    <turtle-syntax-bad-string-02.ttl> ;
line 2013     .
line 2014  
line 2015  <#turtle-syntax-bad-string-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2016     mf:name    "turtle-syntax-bad-string-03" ;
line 2017     rdfs:comment "mismatching string literal long/short (negative test)" ;
line 2018     rdft:approval rdft:Approved ;
line 2019     mf:action    <turtle-syntax-bad-string-03.ttl> ;
line 2020     .
line 2021  
line 2022  <#turtle-syntax-bad-string-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2023     mf:name    "turtle-syntax-bad-string-04" ;
line 2024     rdfs:comment "mismatching long string literal open/close (negative test)" ;
line 2025     rdft:approval rdft:Approved ;
line 2026     mf:action    <turtle-syntax-bad-string-04.ttl> ;
line 2027     .
line 2028  
line 2029  <#turtle-syntax-bad-string-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2030     mf:name    "turtle-syntax-bad-string-05" ;
line 2031     rdfs:comment "Long literal with missing end (negative test)" ;
line 2032     rdft:approval rdft:Approved ;
line 2033     mf:action    <turtle-syntax-bad-string-05.ttl> ;
line 2034     .
line 2035  
line 2036  <#turtle-syntax-bad-string-06> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2037     mf:name    "turtle-syntax-bad-string-06" ;
line 2038     rdfs:comment "Long literal with extra quote (negative test)" ;
line 2039     rdft:approval rdft:Approved ;
line 2040     mf:action    <turtle-syntax-bad-string-06.ttl> ;
line 2041     .
line 2042  
line 2043  <#turtle-syntax-bad-string-07> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2044     mf:name    "turtle-syntax-bad-string-07" ;
line 2045     rdfs:comment "Long literal with extra squote (negative test)" ;
line 2046     rdft:approval rdft:Approved ;
line 2047     mf:action    <turtle-syntax-bad-string-07.ttl> ;
line 2048     .
line 2049  
line 2050  <#turtle-syntax-bad-num-01> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2051     mf:name    "turtle-syntax-bad-num-01" ;
line 2052     rdfs:comment "Bad number format (negative test)" ;
line 2053     rdft:approval rdft:Approved ;
line 2054     mf:action    <turtle-syntax-bad-num-01.ttl> ;
line 2055     .
line 2056  
line 2057  <#turtle-syntax-bad-num-02> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2058     mf:name    "turtle-syntax-bad-num-02" ;
line 2059     rdfs:comment "Bad number format (negative test)" ;
line 2060     rdft:approval rdft:Approved ;
line 2061     mf:action    <turtle-syntax-bad-num-02.ttl> ;
line 2062     .
line 2063  
line 2064  <#turtle-syntax-bad-num-03> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2065     mf:name    "turtle-syntax-bad-num-03" ;
line 2066     rdfs:comment "Bad number format (negative test)" ;
line 2067     rdft:approval rdft:Approved ;
line 2068     mf:action    <turtle-syntax-bad-num-03.ttl> ;
line 2069     .
line 2070  
line 2071  <#turtle-syntax-bad-num-04> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2072     mf:name    "turtle-syntax-bad-num-04" ;
line 2073     rdfs:comment "Bad number format (negative test)" ;
line 2074     rdft:approval rdft:Approved ;
line 2075     mf:action    <turtle-syntax-bad-num-04.ttl> ;
line 2076     .
line 2077  
line 2078  <#turtle-syntax-bad-num-05> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2079     mf:name    "turtle-syntax-bad-num-05" ;
line 2080     rdfs:comment "Bad number format (negative test)" ;
line 2081     rdft:approval rdft:Approved ;
line 2082     mf:action    <turtle-syntax-bad-num-05.ttl> ;
line 2083     .
line 2084  
line 2085  <#turtle-eval-struct-01> rdf:type rdft:TestTurtleEval ;
line 2086     mf:name    "turtle-eval-struct-01" ;
line 2087     rdfs:comment "triple with IRIs" ;
line 2088     rdft:approval rdft:Approved ;
line 2089     mf:action    <turtle-eval-struct-01.ttl> ;
line 2090     mf:result    <turtle-eval-struct-01.nt> ;
line 2091     .
line 2092  
line 2093  <#turtle-eval-struct-02> rdf:type rdft:TestTurtleEval ;
line 2094     mf:name    "turtle-eval-struct-02" ;
line 2095     rdfs:comment "triple with IRIs and embedded whitespace" ;
line 2096     rdft:approval rdft:Approved ;
line 2097     mf:action    <turtle-eval-struct-02.ttl> ;
line 2098     mf:result    <turtle-eval-struct-02.nt> ;
line 2099     .
line 2100  
line 2101  <#turtle-subm-01> rdf:type rdft:TestTurtleEval ;
line 2102     mf:name    "turtle-subm-01" ;
line 2103     rdfs:comment "Blank subject" ;
line 2104     rdft:approval rdft:Approved ;
line 2105     mf:action    <turtle-subm-01.ttl> ;
line 2106     mf:result    <turtle-subm-01.nt> ;
line 2107     .
line 2108  
line 2109  <#turtle-subm-02> rdf:type rdft:TestTurtleEval ;
line 2110     mf:name    "turtle-subm-02" ;
line 2111     rdfs:comment "@prefix and qnames" ;
line 2112     rdft:approval rdft:Approved ;
line 2113     mf:action    <turtle-subm-02.ttl> ;
line 2114     mf:result    <turtle-subm-02.nt> ;
line 2115     .
line 2116  
line 2117  <#turtle-subm-03> rdf:type rdft:TestTurtleEval ;
line 2118     mf:name    "turtle-subm-03" ;
line 2119     rdfs:comment ", operator" ;
line 2120     rdft:approval rdft:Approved ;
line 2121     mf:action    <turtle-subm-03.ttl> ;
line 2122     mf:result    <turtle-subm-03.nt> ;
line 2123     .
line 2124  
line 2125  <#turtle-subm-04> rdf:type rdft:TestTurtleEval ;
line 2126     mf:name    "turtle-subm-04" ;
line 2127     rdfs:comment "; operator" ;
line 2128     rdft:approval rdft:Approved ;
line 2129     mf:action    <turtle-subm-04.ttl> ;
line 2130     mf:result    <turtle-subm-04.nt> ;
line 2131     .
line 2132  
line 2133  <#turtle-subm-05> rdf:type rdft:TestTurtleEval ;
line 2134     mf:name    "turtle-subm-05" ;
line 2135     rdfs:comment "empty [] as subject and object" ;
line 2136     rdft:approval rdft:Approved ;
line 2137     mf:action    <turtle-subm-05.ttl> ;
line 2138     mf:result    <turtle-subm-05.nt> ;
line 2139     .
line 2140  
line 2141  <#turtle-subm-06> rdf:type rdft:TestTurtleEval ;
line 2142     mf:name    "turtle-subm-06" ;
line 2143     rdfs:comment "non-empty [] as subject and object" ;
line 2144     rdft:approval rdft:Approved ;
line 2145     mf:action    <turtle-subm-06.ttl> ;
line 2146     mf:result    <turtle-subm-06.nt> ;
line 2147     .
line 2148  
line 2149  <#turtle-subm-07> rdf:type rdft:TestTurtleEval ;
line 2150     mf:name    "turtle-subm-07" ;
line 2151     rdfs:comment "'a' as predicate" ;
line 2152     rdft:approval rdft:Approved ;
line 2153     mf:action    <turtle-subm-07.ttl> ;
line 2154     mf:result    <turtle-subm-07.nt> ;
line 2155     .
line 2156  
line 2157  <#turtle-subm-08> rdf:type rdft:TestTurtleEval ;
line 2158     mf:name    "turtle-subm-08" ;
line 2159     rdfs:comment "simple collection" ;
line 2160     rdft:approval rdft:Approved ;
line 2161     mf:action    <turtle-subm-08.ttl> ;
line 2162     mf:result    <turtle-subm-08.nt> ;
line 2163     .
line 2164  
line 2165  <#turtle-subm-09> rdf:type rdft:TestTurtleEval ;
line 2166     mf:name    "turtle-subm-09" ;
line 2167     rdfs:comment "empty collection" ;
line 2168     rdft:approval rdft:Approved ;
line 2169     mf:action    <turtle-subm-09.ttl> ;
line 2170     mf:result    <turtle-subm-09.nt> ;
line 2171     .
line 2172  
line 2173  <#turtle-subm-10> rdf:type rdft:TestTurtleEval ;
line 2174     mf:name    "turtle-subm-10" ;
line 2175     rdfs:comment "integer datatyped literal" ;
line 2176     rdft:approval rdft:Approved ;
line 2177     mf:action    <turtle-subm-10.ttl> ;
line 2178     mf:result    <turtle-subm-10.nt> ;
line 2179     .
line 2180  
line 2181  <#turtle-subm-11> rdf:type rdft:TestTurtleEval ;
line 2182     mf:name    "turtle-subm-11" ;
line 2183     rdfs:comment "decimal integer canonicalization" ;
line 2184     rdft:approval rdft:Approved ;
line 2185     mf:action    <turtle-subm-11.ttl> ;
line 2186     mf:result    <turtle-subm-11.nt> ;
line 2187     .
line 2188  
line 2189  <#turtle-subm-12> rdf:type rdft:TestTurtleEval ;
line 2190     mf:name    "turtle-subm-12" ;
line 2191     rdfs:comment "- and _ in names and qnames" ;
line 2192     rdft:approval rdft:Approved ;
line 2193     mf:action    <turtle-subm-12.ttl> ;
line 2194     mf:result    <turtle-subm-12.nt> ;
line 2195     .
line 2196  
line 2197  <#turtle-subm-13> rdf:type rdft:TestTurtleEval ;
line 2198     mf:name    "turtle-subm-13" ;
line 2199     rdfs:comment "tests for rdf:_<numbers> and other qnames starting with _" ;
line 2200     rdft:approval rdft:Approved ;
line 2201     mf:action    <turtle-subm-13.ttl> ;
line 2202     mf:result    <turtle-subm-13.nt> ;
line 2203     .
line 2204  
line 2205  <#turtle-subm-14> rdf:type rdft:TestTurtleEval ;
line 2206     mf:name    "turtle-subm-14" ;
line 2207     rdfs:comment "bare : allowed" ;
line 2208     rdft:approval rdft:Approved ;
line 2209     mf:action    <turtle-subm-14.ttl> ;
line 2210     mf:result    <turtle-subm-14.nt> ;
line 2211     .
line 2212  
line 2213  <#turtle-subm-15> rdf:type rdft:TestTurtleEval ;
line 2214     mf:name    "turtle-subm-15" ;
line 2215     rdfs:comment "simple long literal" ;
line 2216     rdft:approval rdft:Approved ;
line 2217     mf:action    <turtle-subm-15.ttl> ;
line 2218     mf:result    <turtle-subm-15.nt> ;
line 2219     .
line 2220  
line 2221  <#turtle-subm-16> rdf:type rdft:TestTurtleEval ;
line 2222     mf:name    "turtle-subm-16" ;
line 2223     rdfs:comment "long literals with escapes" ;
line 2224     rdft:approval rdft:Approved ;
line 2225     mf:action    <turtle-subm-16.ttl> ;
line 2226     mf:result    <turtle-subm-16.nt> ;
line 2227     .
line 2228  
line 2229  <#turtle-subm-17> rdf:type rdft:TestTurtleEval ;
line 2230     mf:name    "turtle-subm-17" ;
line 2231     rdfs:comment "floating point number" ;
line 2232     rdft:approval rdft:Approved ;
line 2233     mf:action    <turtle-subm-17.ttl> ;
line 2234     mf:result    <turtle-subm-17.nt> ;
line 2235     .
line 2236  
line 2237  <#turtle-subm-18> rdf:type rdft:TestTurtleEval ;
line 2238     mf:name    "turtle-subm-18" ;
line 2239     rdfs:comment "empty literals, normal and long variant" ;
line 2240     rdft:approval rdft:Approved ;
line 2241     mf:action    <turtle-subm-18.ttl> ;
line 2242     mf:result    <turtle-subm-18.nt> ;
line 2243     .
line 2244  
line 2245  <#turtle-subm-19> rdf:type rdft:TestTurtleEval ;
line 2246     mf:name    "turtle-subm-19" ;
line 2247     rdfs:comment "positive integer, decimal and doubles" ;
line 2248     rdft:approval rdft:Approved ;
line 2249     mf:action    <turtle-subm-19.ttl> ;
line 2250     mf:result    <turtle-subm-19.nt> ;
line 2251     .
line 2252  
line 2253  <#turtle-subm-20> rdf:type rdft:TestTurtleEval ;
line 2254     mf:name    "turtle-subm-20" ;
line 2255     rdfs:comment "negative integer, decimal and doubles" ;
line 2256     rdft:approval rdft:Approved ;
line 2257     mf:action    <turtle-subm-20.ttl> ;
line 2258     mf:result    <turtle-subm-20.nt> ;
line 2259     .
line 2260  
line 2261  <#turtle-subm-21> rdf:type rdft:TestTurtleEval ;
line 2262     mf:name    "turtle-subm-21" ;
line 2263     rdfs:comment "long literal ending in double quote" ;
line 2264     rdft:approval rdft:Approved ;
line 2265     mf:action    <turtle-subm-21.ttl> ;
line 2266     mf:result    <turtle-subm-21.nt> ;
line 2267     .
line 2268  
line 2269  <#turtle-subm-22> rdf:type rdft:TestTurtleEval ;
line 2270     mf:name    "turtle-subm-22" ;
line 2271     rdfs:comment "boolean literals" ;
line 2272     rdft:approval rdft:Approved ;
line 2273     mf:action    <turtle-subm-22.ttl> ;
line 2274     mf:result    <turtle-subm-22.nt> ;
line 2275     .
line 2276  
line 2277  <#turtle-subm-23> rdf:type rdft:TestTurtleEval ;
line 2278     mf:name    "turtle-subm-23" ;
line 2279     rdfs:comment "comments" ;
line 2280     rdft:approval rdft:Approved ;
line 2281     mf:action    <turtle-subm-23.ttl> ;
line 2282     mf:result    <turtle-subm-23.nt> ;
line 2283     .
line 2284  
line 2285  <#turtle-subm-24> rdf:type rdft:TestTurtleEval ;
line 2286     mf:name    "turtle-subm-24" ;
line 2287     rdfs:comment "no final mewline" ;
line 2288     rdft:approval rdft:Approved ;
line 2289     mf:action    <turtle-subm-24.ttl> ;
line 2290     mf:result    <turtle-subm-24.nt> ;
line 2291     .
line 2292  
line 2293  <#turtle-subm-25> rdf:type rdft:TestTurtleEval ;
line 2294     mf:name    "turtle-subm-25" ;
line 2295     rdfs:comment "repeating a @prefix changes pname definition" ;
line 2296     rdft:approval rdft:Approved ;
line 2297     mf:action    <turtle-subm-25.ttl> ;
line 2298     mf:result    <turtle-subm-25.nt> ;
line 2299     .
line 2300  
line 2301  <#turtle-subm-26> rdf:type rdft:TestTurtleEval ;
line 2302     mf:name    "turtle-subm-26" ;
line 2303     rdfs:comment "Variations on decimal canonicalization" ;
line 2304     rdft:approval rdft:Approved ;
line 2305     mf:action    <turtle-subm-26.ttl> ;
line 2306     mf:result    <turtle-subm-26.nt> ;
line 2307     .
line 2308  
line 2309  <#turtle-subm-27> rdf:type rdft:TestTurtleEval ;
line 2310     mf:name    "turtle-subm-27" ;
line 2311     rdfs:comment "Repeating @base changes base for relative IRI lookup" ;
line 2312     rdft:approval rdft:Approved ;
line 2313     mf:action    <turtle-subm-27.ttl> ;
line 2314     mf:result    <turtle-subm-27.nt> ;
line 2315     .
line 2316  
line 2317  <#turtle-eval-bad-01> rdf:type rdft:TestTurtleNegativeEval ;
line 2318     mf:name    "turtle-eval-bad-01" ;
line 2319     rdfs:comment "Bad IRI : good escape, bad charcater (negative evaluation test)" ;
line 2320     rdft:approval rdft:Approved ;
line 2321     mf:action    <turtle-eval-bad-01.ttl> ;
line 2322     .
line 2323  
line 2324  <#turtle-eval-bad-02> rdf:type rdft:TestTurtleNegativeEval ;
line 2325     mf:name    "turtle-eval-bad-02" ;
line 2326     rdfs:comment "Bad IRI : hex 3C is < (negative evaluation test)" ;
line 2327     rdft:approval rdft:Approved ;
line 2328     mf:action    <turtle-eval-bad-02.ttl> ;
line 2329     .
line 2330  
line 2331  <#turtle-eval-bad-03> rdf:type rdft:TestTurtleNegativeEval ;
line 2332     mf:name    "turtle-eval-bad-03" ;
line 2333     rdfs:comment "Bad IRI : hex 3E is  (negative evaluation test)" ;
line 2334     rdft:approval rdft:Approved ;
line 2335     mf:action    <turtle-eval-bad-03.ttl> ;
line 2336     .
line 2337  
line 2338  <#turtle-eval-bad-04> rdf:type rdft:TestTurtleNegativeEval ;
line 2339     mf:name    "turtle-eval-bad-04" ;
line 2340     rdfs:comment "Bad IRI : {abc} (negative evaluation test)" ;
line 2341     rdft:approval rdft:Approved ;
line 2342     mf:action    <turtle-eval-bad-04.ttl> ;
line 2343     .
line 2344  
line 2345  # tests requested by Jeremy Carroll
line 2346  # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c35
line 2347  <#comment_following_localName> rdf:type rdft:TestTurtleEval ;
line 2348     mf:name      "comment_following_localName" ;
line 2349     rdfs:comment "comment following localName" ;
line 2350     rdft:approval rdft:Proposed ;
line 2351     mf:action    <comment_following_localName.ttl> ;
line 2352     mf:result    <IRI_spo.nt> ;
line 2353     .
line 2354  
line 2355  <#number_sign_following_localName> rdf:type rdft:TestTurtleEval ;
line 2356     mf:name      "number_sign_following_localName" ;
line 2357     rdfs:comment "number sign following localName" ;
line 2358     rdft:approval rdft:Proposed ;
line 2359     mf:action    <number_sign_following_localName.ttl> ;
line 2360     mf:result    <number_sign_following_localName.nt> ;
line 2361     .
line 2362  
line 2363  <#comment_following_PNAME_NS> rdf:type rdft:TestTurtleEval ;
line 2364     mf:name      "comment_following_PNAME_NS" ;
line 2365     rdfs:comment "comment following PNAME_NS" ;
line 2366     rdft:approval rdft:Proposed ;
line 2367     mf:action    <comment_following_PNAME_NS.ttl> ;
line 2368     mf:result    <comment_following_PNAME_NS.nt> ;
line 2369     .
line 2370  
line 2371  <#number_sign_following_PNAME_NS> rdf:type rdft:TestTurtleEval ;
line 2372     mf:name      "number_sign_following_PNAME_NS" ;
line 2373     rdfs:comment "number sign following PNAME_NS" ;
line 2374     rdft:approval rdft:Proposed ;
line 2375     mf:action    <number_sign_following_PNAME_NS.ttl> ;
line 2376     mf:result    <number_sign_following_PNAME_NS.nt> ;
line 2377     .
line 2378  
line 2379  # tests from Dave Beckett
line 2380  # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c28
line 2381  <#LITERAL_LONG2_with_REVERSE_SOLIDUS> rdf:type rdft:TestTurtleEval ;
line 2382     mf:name    "LITERAL_LONG2_with_REVERSE_SOLIDUS" ;
line 2383     rdfs:comment "REVERSE SOLIDUS at end of LITERAL_LONG2" ;
line 2384     rdft:approval rdft:Approved ;
line 2385     mf:action    <LITERAL_LONG2_with_REVERSE_SOLIDUS.ttl> ;
line 2386     mf:result    <LITERAL_LONG2_with_REVERSE_SOLIDUS.nt> ;
line 2387     .
line 2388  
line 2389  <#turtle-syntax-bad-LITERAL2_with_langtag_and_datatype> rdf:type rdft:TestTurtleNegativeSyntax ;
line 2390     mf:name    "turtle-syntax-bad-num-05" ;
line 2391     rdfs:comment "Bad number format (negative test)" ;
line 2392     rdft:approval rdft:Approved ;
line 2393     mf:action    <turtle-syntax-bad-LITERAL2_with_langtag_and_datatype.ttl> ;
line 2394     .
line 2395  
line 2396  <#two_LITERAL_LONG2s> rdf:type rdft:TestTurtleEval ;
line 2397     mf:name    "two_LITERAL_LONG2s" ;
line 2398     rdfs:comment "two LITERAL_LONG2s testing quote delimiter overrun" ;
line 2399     rdft:approval rdft:Approved ;
line 2400     mf:action    <two_LITERAL_LONG2s.ttl> ;
line 2401     mf:result    <two_LITERAL_LONG2s.nt> ;
line 2402     .
line 2403  
line 2404  <#langtagged_LONG_with_subtag> rdf:type rdft:TestTurtleEval ;
line 2405     mf:name      "langtagged_LONG_with_subtag" ;
line 2406     rdfs:comment "langtagged LONG with subtag \"\"\"Cheers\"\"\"@en-UK" ;
line 2407     rdft:approval rdft:Approved ;
line 2408     mf:action    <langtagged_LONG_with_subtag.ttl> ;
line 2409     mf:result    <langtagged_LONG_with_subtag.nt> ;
line 2410     .
line 2411  
line 2412  # tests from David Robillard
line 2413  # http://www.w3.org/2011/rdf-wg/wiki/Turtle_Candidate_Recommendation_Comments#c21
line 2414  <#turtle-syntax-bad-blank-label-dot-end>
line 2415  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2416  	rdfs:comment "Blank node label must not end in dot" ;
line 2417  	mf:name "turtle-syntax-bad-blank-label-dot-end" ;
line 2418          rdft:approval rdft:Approved ;
line 2419  	mf:action <turtle-syntax-bad-blank-label-dot-end.ttl> .
line 2420  
line 2421  <#turtle-syntax-bad-number-dot-in-anon>
line 2422  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2423  	rdfs:comment "Dot delimeter may not appear in anonymous nodes" ;
line 2424  	mf:name "turtle-syntax-bad-number-dot-in-anon" ;
line 2425          rdft:approval rdft:Approved ;
line 2426  	mf:action <turtle-syntax-bad-number-dot-in-anon.ttl> .
line 2427  
line 2428  <#turtle-syntax-bad-ln-dash-start>
line 2429  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2430  	rdfs:comment "Local name must not begin with dash" ;
line 2431  	mf:name "turtle-syntax-bad-ln-dash-start" ;
line 2432          rdft:approval rdft:Approved ;
line 2433  	mf:action <turtle-syntax-bad-ln-dash-start.ttl> .
line 2434  
line 2435  <#turtle-syntax-bad-ln-escape>
line 2436  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2437  	rdfs:comment "Bad hex escape in local name" ;
line 2438  	mf:name "turtle-syntax-bad-ln-escape" ;
line 2439          rdft:approval rdft:Approved ;
line 2440  	mf:action <turtle-syntax-bad-ln-escape.ttl> .
line 2441  
line 2442  <#turtle-syntax-bad-ln-escape-start>
line 2443  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2444  	rdfs:comment "Bad hex escape at start of local name" ;
line 2445  	mf:name "turtle-syntax-bad-ln-escape-start" ;
line 2446          rdft:approval rdft:Approved ;
line 2447  	mf:action <turtle-syntax-bad-ln-escape-start.ttl> .
line 2448  
line 2449  <#turtle-syntax-bad-ns-dot-end>
line 2450  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2451  	rdfs:comment "Prefix must not end in dot" ;
line 2452  	mf:name "turtle-syntax-bad-ns-dot-end" ;
line 2453          rdft:approval rdft:Approved ;
line 2454  	mf:action <turtle-syntax-bad-ns-dot-end.ttl> .
line 2455  
line 2456  <#turtle-syntax-bad-ns-dot-start>
line 2457  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2458  	rdfs:comment "Prefix must not start with dot" ;
line 2459  	mf:name "turtle-syntax-bad-ns-dot-start" ;
line 2460          rdft:approval rdft:Approved ;
line 2461  	mf:action <turtle-syntax-bad-ns-dot-start.ttl> .
line 2462  
line 2463  <#turtle-syntax-bad-missing-ns-dot-end>
line 2464  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2465  	rdfs:comment "Prefix must not end in dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)" ;
line 2466  	mf:name "turtle-syntax-bad-missing-ns-dot-end" ;
line 2467          rdft:approval rdft:Approved ;
line 2468  	mf:action <turtle-syntax-bad-missing-ns-dot-end.ttl> .
line 2469  
line 2470  <#turtle-syntax-bad-missing-ns-dot-start>
line 2471  	rdf:type rdft:TestTurtleNegativeSyntax ;
line 2472  	rdfs:comment "Prefix must not start with dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)" ;
line 2473  	mf:name "turtle-syntax-bad-missing-ns-dot-start" ;
line 2474          rdft:approval rdft:Approved ;
line 2475  	mf:action <turtle-syntax-bad-missing-ns-dot-start.ttl> .
line 2476  
line 2477  <#turtle-syntax-ln-dots>
line 2478  	rdf:type rdft:TestTurtlePositiveSyntax ;
line 2479  	rdfs:comment "Dots in pname local names" ;
line 2480  	mf:name "turtle-syntax-ln-dots" ;
line 2481          rdft:approval rdft:Approved ;
line 2482  	mf:action <turtle-syntax-ln-dots.ttl> .
line 2483  
line 2484  <#turtle-syntax-ln-colons>
line 2485  	rdf:type rdft:TestTurtlePositiveSyntax ;
line 2486  	rdfs:comment "Colons in pname local names" ;
line 2487  	mf:name "turtle-syntax-ln-colons" ;
line 2488          rdft:approval rdft:Approved ;
line 2489  	mf:action <turtle-syntax-ln-colons.ttl> .
line 2490  
line 2491  <#turtle-syntax-ns-dots>
line 2492  	rdf:type rdft:TestTurtlePositiveSyntax ;
line 2493  	rdfs:comment "Dots in namespace names" ;
line 2494  	mf:name "turtle-syntax-ns-dots" ;
line 2495          rdft:approval rdft:Approved ;
line 2496  	mf:action <turtle-syntax-ns-dots.ttl> .
line 2497  
line 2498  <#turtle-syntax-blank-label>
line 2499  	rdf:type rdft:TestTurtlePositiveSyntax ;
line 2500  	rdfs:comment "Characters allowed in blank node labels" ;
line 2501  	mf:name "turtle-syntax-blank-label" ;
line 2502          rdft:approval rdft:Approved ;
line 2503  	mf:action <turtle-syntax-blank-label.ttl> .
tree([] ([58] ([85 58] ([129 85 58] @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .))) ([58] ([85 58] ([129 85 58] @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .))) ([58] ([85 58] ([129 85 58] @prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .))) ([58] ([85 58] ([129 85 58] @prefix qt: <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .))) ([58] ([85 58] ([129 85 58] @prefix rdft: <http://www.w3.org/ns/rdftest#> .))) ([70] ([191 70] ([215 191 70] <>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] mf:Manifest)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle tests"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:entries))) ([250 192 70] ([281 250 192 70] ([290 281 250 192 70] ([230 290 281 250 192 70] ( ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#IRI_subject>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#IRI_with_four_digit_numeric_escape>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#IRI_with_eight_digit_numeric_escape>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#IRI_with_all_punctuation>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#bareword_a_predicate>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#old_style_prefix>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#SPARQL_style_prefix>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefixed_IRI_predicate>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefixed_IRI_object>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefix_only_IRI>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefix_with_PN_CHARS_BASE_character_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefix_with_non_leading_extras>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#default_namespace_IRI>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefix_reassigned_and_used>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#reserved_escaped_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#percent_escaped_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#HYPHEN_MINUS_in_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#underscore_in_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localname_with_COLON>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_nfc_PN_CHARS_BASE_character_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_leading_underscore>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_leading_digit>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#localName_with_non_leading_extras>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#old_style_base>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#SPARQL_style_base>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_subject>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_object>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_with_PN_CHARS_BASE_character_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_with_leading_underscore>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_with_leading_digit>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#labeled_blank_node_with_non_leading_extras>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#anonymous_blank_node_subject>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#anonymous_blank_node_object>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#sole_blankNodePropertyList>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#blankNodePropertyList_as_subject>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#blankNodePropertyList_as_object>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#blankNodePropertyList_with_multiple_triples>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#nested_blankNodePropertyLists>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#blankNodePropertyList_containing_collection>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#collection_subject>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#collection_object>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#empty_collection>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#nested_collection>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#first>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#last>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL1>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL1_ascii_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL1_with_UTF8_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL1_all_controls>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL1_all_punctuation>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG1>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG1_ascii_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG1_with_UTF8_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG1_with_1_squote>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG1_with_2_squotes>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL2>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL2_ascii_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL2_with_UTF8_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2_ascii_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2_with_UTF8_boundaries>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2_with_1_squote>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2_with_2_squotes>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_CHARACTER_TABULATION>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_BACKSPACE>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_LINE_FEED>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_CARRIAGE_RETURN>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_FORM_FEED>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_REVERSE_SOLIDUS>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_escaped_CHARACTER_TABULATION>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_escaped_BACKSPACE>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_escaped_LINE_FEED>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_escaped_CARRIAGE_RETURN>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_escaped_FORM_FEED>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_numeric_escape4>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_with_numeric_escape8>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#IRIREF_datatype>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#prefixed_name_datatype>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#bareword_integer>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#bareword_decimal>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#bareword_double>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#double_lower_case_e>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#negative_numeric>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#positive_numeric>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#numeric_with_leading_0>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_true>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#literal_false>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#langtagged_non_LONG>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#langtagged_LONG>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#lantag_with_subtag>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#objectList_with_two_objects>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#predicateObjectList_with_two_objectLists>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#repeated_semis_at_end>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#repeated_semis_not_at_end>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#comment_following_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#number_sign_following_localName>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#comment_following_PNAME_NS>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#number_sign_following_PNAME_NS>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#LITERAL_LONG2_with_REVERSE_SOLIDUS>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-LITERAL2_with_langtag_and_datatype>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#two_LITERAL_LONG2s>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#langtagged_LONG_with_subtag>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-file-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-file-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-file-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-uri-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-uri-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-uri-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-uri-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-base-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-base-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-base-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-base-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-prefix-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-string-11>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-str-esc-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-str-esc-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-str-esc-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-pname-esc-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-pname-esc-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-pname-esc-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bnode-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-number-11>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-datatypes-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-datatypes-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-kw-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-kw-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-kw-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-struct-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-struct-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-struct-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-struct-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-struct-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-lists-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-lists-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-lists-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-lists-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-lists-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-uri-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-uri-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-uri-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-uri-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-uri-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-prefix-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-prefix-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-prefix-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-prefix-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-prefix-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-base-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-base-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-base-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-kw-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-kw-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-kw-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-kw-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-kw-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-11>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-12>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-n3-extras-13>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-11>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-12>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-13>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-14>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-15>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-16>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-struct-17>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-lang-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-esc-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-esc-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-esc-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-esc-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-pname-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-pname-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-pname-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-string-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-num-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-num-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-num-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-num-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-num-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-struct-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-struct-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-05>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-06>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-07>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-08>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-09>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-10>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-11>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-12>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-13>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-14>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-15>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-16>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-17>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-18>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-19>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-20>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-21>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-22>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-23>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-24>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-25>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-26>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-subm-27>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-bad-01>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-bad-02>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-bad-03>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-eval-bad-04>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-blank-label-dot-end>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-ln-dash-start>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-ln-escape-start>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-ln-escape>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-missing-ns-dot-end>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-missing-ns-dot-start>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-ns-dot-end>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-ns-dot-start>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-bad-number-dot-in-anon>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-blank-label>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-ln-colons>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-ln-dots>)) ([295 230 290 281 250 192 70] ([289 295 230 290 281 250 192 70] <#turtle-syntax-ns-dots>)) )))))) .) ([70] ([191 70] ([215 191 70] <#IRI_subject>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI_subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_subject.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#IRI_with_four_digit_numeric_escape>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI_with_four_digit_numeric_escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI with four digit numeric escape (\\u)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_with_four_digit_numeric_escape.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#IRI_with_eight_digit_numeric_escape>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI_with_eight_digit_numeric_escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI with eight digit numeric escape (\\U)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_with_eight_digit_numeric_escape.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#IRI_with_all_punctuation>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI_with_all_punctuation"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRI with all punctuation"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_with_all_punctuation.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_with_all_punctuation.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#bareword_a_predicate>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword_a_predicate"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword a predicate"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_a_predicate.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_a_predicate.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#old_style_prefix>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "old_style_prefix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "old-style prefix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <old_style_prefix.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#SPARQL_style_prefix>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "SPARQL_style_prefix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "SPARQL-style prefix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <SPARQL_style_prefix.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefixed_IRI_predicate>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed_IRI_predicate"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed IRI predicate"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefixed_IRI_predicate.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefixed_IRI_object>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed_IRI_object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed IRI object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefixed_IRI_object.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefix_only_IRI>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix_only_IRI"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix-only IRI (p:)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefix_only_IRI.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefix_with_PN_CHARS_BASE_character_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix_with_PN_CHARS_BASE_character_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix with PN CHARS BASE character boundaries (prefix: AZazÀÖØöø...:)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefix_with_PN_CHARS_BASE_character_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefix_with_non_leading_extras>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix_with_non_leading_extras"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix with_non_leading_extras (_:a·̀ͯ‿.⁀)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefix_with_non_leading_extras.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with assigned, NFC-normalized, basic-multilingual-plane PN CHARS BASE character boundaries (p:AZazÀÖØöø...)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with assigned, NFC-normalized PN CHARS BASE character boundaries (p:AZazÀÖØöø...)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_nfc_PN_CHARS_BASE_character_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_nfc_PN_CHARS_BASE_character_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with nfc-normalize PN CHARS BASE character boundaries (p:AZazÀÖØöø...)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_nfc_PN_CHARS_BASE_character_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_nfc_PN_CHARS_BASE_character_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#default_namespace_IRI>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "default_namespace_IRI"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "default namespace IRI (:ln)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <default_namespace_IRI.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefix_reassigned_and_used>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix_reassigned_and_used"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefix reassigned and used"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefix_reassigned_and_used.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefix_reassigned_and_used.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#reserved_escaped_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "reserved_escaped_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "reserved-escaped local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <reserved_escaped_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <reserved_escaped_localName.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#percent_escaped_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "percent_escaped_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "percent-escaped local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <percent_escaped_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <percent_escaped_localName.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#HYPHEN_MINUS_in_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "HYPHEN_MINUS_in_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "HYPHEN-MINUS in local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <HYPHEN_MINUS_in_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <HYPHEN_MINUS_in_localName.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#underscore_in_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "underscore_in_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "underscore in local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <underscore_in_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <underscore_in_localName.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localname_with_COLON>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localname_with_COLON"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localname with COLON"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localname_with_COLON.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localname_with_COLON.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_leading_underscore>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_leading_underscore"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with leading underscore (p:_)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_leading_underscore.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_leading_underscore.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_leading_digit>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_leading_digit"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with leading digit (p:_)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_leading_digit.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_leading_digit.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#localName_with_non_leading_extras>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName_with_non_leading_extras"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "localName with_non_leading_extras (_:a·̀ͯ‿.⁀)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_non_leading_extras.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <localName_with_non_leading_extras.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#old_style_base>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "old_style_base"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "old-style base"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <old_style_base.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#SPARQL_style_base>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "SPARQL_style_base"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "SPARQL-style base"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <SPARQL_style_base.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_subject>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_subject.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_subject.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_object>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_with_PN_CHARS_BASE_character_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_with_PN_CHARS_BASE_character_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node with PN_CHARS_BASE character boundaries (_:AZazÀÖØöø...)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_with_PN_CHARS_BASE_character_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_with_leading_underscore>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_with_leading_underscore"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node with_leading_underscore (_:_)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_with_leading_underscore.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_with_leading_digit>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_with_leading_digit"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node with_leading_digit (_:0)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_with_leading_digit.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#labeled_blank_node_with_non_leading_extras>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled_blank_node_with_non_leading_extras"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled blank node with_non_leading_extras (_:a·̀ͯ‿.⁀)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_with_non_leading_extras.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#anonymous_blank_node_subject>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "anonymous_blank_node_subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "anonymous blank node subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <anonymous_blank_node_subject.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_subject.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#anonymous_blank_node_object>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "anonymous_blank_node_object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "anonymous blank node object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <anonymous_blank_node_object.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#sole_blankNodePropertyList>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "sole_blankNodePropertyList"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "sole blankNodePropertyList [ <p> <o> ] ."))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <sole_blankNodePropertyList.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <labeled_blank_node_subject.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#blankNodePropertyList_as_subject>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList_as_subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList as subject [ … ] <p> <o> ."))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_as_subject.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_as_subject.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#blankNodePropertyList_as_object>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList_as_object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList as object <s> <p> [ … ] ."))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_as_object.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_as_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#blankNodePropertyList_with_multiple_triples>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList_with_multiple_triples"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList with multiple triples [ <s> <p> ; <s2> <p2> ]"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_with_multiple_triples.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_with_multiple_triples.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#nested_blankNodePropertyLists>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "nested_blankNodePropertyLists"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "nested blankNodePropertyLists [ <p1> [ <p2> <o2> ] ; <p3> <o3> ]"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <nested_blankNodePropertyLists.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <nested_blankNodePropertyLists.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#blankNodePropertyList_containing_collection>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList_containing_collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "blankNodePropertyList containing collection [ <p1> ( … ) ]"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_containing_collection.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <blankNodePropertyList_containing_collection.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#collection_subject>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "collection_subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "collection subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <collection_subject.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <collection_subject.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#collection_object>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "collection_object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "collection object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <collection_object.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <collection_object.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#empty_collection>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty_collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty collection ()"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <empty_collection.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <empty_collection.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#nested_collection>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "nested_collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "nested collection (())"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <nested_collection.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <nested_collection.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#first>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "first"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "first, not last, non-empty nested collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <first.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <first.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#last>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "last"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "last, not first, non-empty nested collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <last.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <last.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL1>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1 'x'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL1_ascii_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_ascii_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x26\\x28...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_ascii_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_ascii_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL1_with_UTF8_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_with_UTF8_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_with_UTF8_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_with_UTF8_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL1_all_controls>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_all_controls"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_all_controls '\\x00\\x01\\x02\\x03\\x04...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_all_controls.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_all_controls.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL1_all_punctuation>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_all_punctuation"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL1_all_punctuation '!\"#$%&()...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_all_punctuation.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1_all_punctuation.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG1>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1 '''x'''"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG1_ascii_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_ascii_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_ascii_boundaries '\\x00\\x26\\x28...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_ascii_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_ascii_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG1_with_UTF8_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_with_UTF8_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_with_UTF8_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_with_UTF8_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG1_with_1_squote>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_with_1_squote"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1 with 1 squote '''a'b'''"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_with_1_squote.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_with_1_squote.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG1_with_2_squotes>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1_with_2_squotes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG1 with 2 squotes '''a''b'''"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_with_2_squotes.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG1_with_2_squotes.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL2>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2 \"x\""))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL2.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL2_ascii_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2_ascii_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x21\\x23...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL2_ascii_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL2_ascii_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL2_with_UTF8_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2_with_UTF8_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL2_with_UTF8_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_with_UTF8_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2 \"\"\"x\"\"\""))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL1.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2_ascii_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_ascii_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_ascii_boundaries '\\x00\\x21\\x23...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_ascii_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_ascii_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2_with_UTF8_boundaries>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_with_UTF8_boundaries"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_UTF8_boundaries.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_with_UTF8_boundaries.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2_with_1_squote>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_with_1_squote"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2 with 1 squote \"\"\"a\"b\"\"\""))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_1_squote.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_1_squote.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2_with_2_squotes>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_with_2_squotes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2 with 2 squotes \"\"\"a\"\"b\"\"\""))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_2_squotes.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_2_squotes.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_CHARACTER_TABULATION>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_CHARACTER_TABULATION"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with CHARACTER TABULATION"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CHARACTER_TABULATION.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CHARACTER_TABULATION.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_BACKSPACE>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_BACKSPACE"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with BACKSPACE"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_BACKSPACE.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_BACKSPACE.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_LINE_FEED>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_LINE_FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with LINE FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_LINE_FEED.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_LINE_FEED.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_CARRIAGE_RETURN>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_CARRIAGE_RETURN"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with CARRIAGE RETURN"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CARRIAGE_RETURN.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CARRIAGE_RETURN.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_FORM_FEED>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_FORM_FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with FORM FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_FORM_FEED.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_FORM_FEED.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_REVERSE_SOLIDUS>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_REVERSE_SOLIDUS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with REVERSE SOLIDUS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_REVERSE_SOLIDUS.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_REVERSE_SOLIDUS.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_escaped_CHARACTER_TABULATION>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_escaped_CHARACTER_TABULATION"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with escaped CHARACTER TABULATION"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_escaped_CHARACTER_TABULATION.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CHARACTER_TABULATION.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_escaped_BACKSPACE>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_escaped_BACKSPACE"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with escaped BACKSPACE"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_escaped_BACKSPACE.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_BACKSPACE.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_escaped_LINE_FEED>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_escaped_LINE_FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with escaped LINE FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_escaped_LINE_FEED.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_LINE_FEED.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_escaped_CARRIAGE_RETURN>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_escaped_CARRIAGE_RETURN"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with escaped CARRIAGE RETURN"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_escaped_CARRIAGE_RETURN.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_CARRIAGE_RETURN.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_escaped_FORM_FEED>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_escaped_FORM_FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with escaped FORM FEED"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_escaped_FORM_FEED.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_FORM_FEED.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_numeric_escape4>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_numeric_escape4"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with numeric escape4 \\u"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_numeric_escape4.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_numeric_escape4.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_with_numeric_escape8>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_with_numeric_escape8"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal with numeric escape8 \\U"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_numeric_escape8.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_with_numeric_escape4.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#IRIREF_datatype>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRIREF_datatype"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRIREF datatype \"\"^^<t>"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRIREF_datatype.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRIREF_datatype.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#prefixed_name_datatype>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed_name_datatype"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "prefixed name datatype \"\"^^p:t"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <prefixed_name_datatype.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRIREF_datatype.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#bareword_integer>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword_integer"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword integer"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_integer.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRIREF_datatype.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#bareword_decimal>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword_decimal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword decimal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_decimal.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_decimal.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#bareword_double>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword_double"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bareword double"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_double.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <bareword_double.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#double_lower_case_e>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "double_lower_case_e"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "double lower case e"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <double_lower_case_e.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <double_lower_case_e.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#negative_numeric>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative_numeric"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative numeric"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <negative_numeric.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <negative_numeric.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#positive_numeric>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "positive_numeric"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "positive numeric"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <positive_numeric.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <positive_numeric.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#numeric_with_leading_0>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "numeric_with_leading_0"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "numeric with leading 0"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <numeric_with_leading_0.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <numeric_with_leading_0.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_true>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_true"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal true"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_true.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_true.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#literal_false>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal_false"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal false"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_false.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <literal_false.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#langtagged_non_LONG>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged_non_LONG"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged non-LONG \"x\"@en"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_non_LONG.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_non_LONG.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#langtagged_LONG>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged_LONG"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged LONG \"\"\"x\"\"\"@en"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_LONG.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_non_LONG.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#lantag_with_subtag>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "lantag_with_subtag"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "lantag with subtag \"x\"@en-us"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <lantag_with_subtag.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <lantag_with_subtag.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#objectList_with_two_objects>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "objectList_with_two_objects"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "objectList with two objects … <o1>,<o2>"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <objectList_with_two_objects.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <objectList_with_two_objects.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#predicateObjectList_with_two_objectLists>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicateObjectList_with_two_objectLists"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicateObjectList with two objectLists … <o1>,<o2>"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <predicateObjectList_with_two_objectLists.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <predicateObjectList_with_two_objectLists.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#repeated_semis_at_end>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "repeated_semis_at_end"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "repeated semis at end <s> <p> <o> ;; <p2> <o2> ."))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <repeated_semis_at_end.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <predicateObjectList_with_two_objectLists.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#repeated_semis_not_at_end>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "repeated_semis_not_at_end"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "repeated semis not at end <s> <p> <o> ;;."))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <repeated_semis_not_at_end.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <repeated_semis_not_at_end.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-file-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-file-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Empty file"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-file-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-file-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-file-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Only comment"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-file-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-file-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-file-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "One comment, one empty line"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-file-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-uri-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-uri-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Only IRIs"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-uri-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-uri-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-uri-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRIs with Unicode escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-uri-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-uri-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-uri-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "IRIs with long Unicode escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-uri-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-uri-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-uri-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Legal IRIs"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-uri-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-base-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-base-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@base"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-base-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-base-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-base-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "BASE"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-base-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-base-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-base-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@base with relative IRIs"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-base-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-base-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-base-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "base with relative IRIs"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-base-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "PreFIX"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Empty PREFIX"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Empty @prefix with % escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix with no suffix"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "colon is a legal pname character"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "dash is a legal pname character"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "underscore is a legal pname character"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-prefix-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-prefix-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "percents in pnames"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-prefix-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "string literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langString literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langString literal with region"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "squote string literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "squote langString literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "squote langString literal with region"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "long string literal with embedded single- and double-quotes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "long string literal with embedded newline"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "squote long string literal with embedded single- and double-quotes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "long langString literal with embedded newline"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-10.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-string-11>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-string-11"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "squote long langString literal with embedded newline"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-string-11.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-str-esc-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-str-esc-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "string literal with escaped newline"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-str-esc-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-str-esc-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-str-esc-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "string literal with Unicode escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-str-esc-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-str-esc-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-str-esc-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "string literal with long Unicode escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-str-esc-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-pname-esc-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-pname-esc-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "pname with back-slash escapes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-pname-esc-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-pname-esc-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-pname-esc-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "pname with back-slash escapes (2)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-pname-esc-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-pname-esc-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-pname-esc-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "pname with back-slash escapes (3)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-pname-esc-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode property list object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode property list object (2)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode property list subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled bnode subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled bnode subject and object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bare bnode property list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode property list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bnode-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bnode-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mixed bnode property list and triple"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bnode-10.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "integer literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative integer literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "positive integer literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "decimal literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "decimal literal (no leading digits)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative decimal literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "positive decimal literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "integer literal with decimal lexical confusion"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "double literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative double literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-10.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-number-11>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-number-11"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "double literal no fraction"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-number-11.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-datatypes-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-datatypes-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "xsd:byte literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-datatypes-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-datatypes-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-datatypes-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "integer as xsd:string"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-datatypes-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-kw-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-kw-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "boolean literal (true)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-kw-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-kw-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-kw-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "boolean literal (false)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-kw-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-kw-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-kw-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'a' as keyword"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-kw-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-struct-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-struct-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "object list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-struct-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-struct-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-struct-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicate list with object list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-struct-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-struct-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-struct-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicate list with object list and dangling ';'"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-struct-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-struct-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-struct-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicate list with multiple ;;"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-struct-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-struct-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-struct-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "predicate list with multiple ;;"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-struct-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-lists-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-lists-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-lists-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-lists-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-lists-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mixed list"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-lists-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-lists-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-lists-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "isomorphic list as subject and object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-lists-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-lists-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-lists-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "lists of lists"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-lists-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-lists-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-lists-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mixed lists with embedded lists"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-lists-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-uri-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-uri-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : space (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-uri-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-uri-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-uri-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : bad escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-uri-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-uri-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-uri-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : bad long escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-uri-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-uri-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-uri-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : character escapes not allowed (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-uri-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-uri-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-uri-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : character escapes not allowed (2) (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-uri-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-prefix-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-prefix-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "No prefix (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-prefix-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-prefix-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-prefix-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "No prefix (2) (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-prefix-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-prefix-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-prefix-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix without URI (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-prefix-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-prefix-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-prefix-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix without prefix name (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-prefix-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-prefix-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-prefix-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix without ':' (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-prefix-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-base-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-base-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@base without URI (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-base-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-base-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-base-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@base in wrong case (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-base-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-base-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-base-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "BASE without URI (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-base-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle is not TriG (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle is not N3 (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle is not NQuads (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle does not allow literals-as-subjects (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle does not allow literals-as-predicates (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle does not allow bnodes-as-predicates (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Turtle does not allow labeled bnodes-as-predicates (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-kw-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-kw-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'A' is not a keyword (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-kw-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-kw-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-kw-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'a' cannot be used as subject (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-kw-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-kw-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-kw-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'a' cannot be used as object (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-kw-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-kw-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-kw-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'true' cannot be used as subject (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-kw-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-kw-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-kw-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'true' cannot be used as object (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-kw-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "{} fomulae not in Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "= is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "N3 paths not in Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "N3 paths not in Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "N3 is...of not in Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "N3 paths not in Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@keywords is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@keywords is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "=> is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "<= is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-10.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-11>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-11"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@forSome is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-11.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-12>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-12"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@forAll is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-12.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-n3-extras-13>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-n3-extras-13"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@keywords is not Turtle (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-n3-extras-13.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "missing '.' (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-08.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "extra '.' (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-09.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "extra '.' (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-10.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-11>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-11"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "trailing ';' no '.' (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-11.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-12>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-12"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "subject, predicate, no object (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-12.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-13>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-13"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "subject, predicate, no object (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-13.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-14>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-14"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal as subject (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-14.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-15>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-15"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "literal as predicate (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-15.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-16>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-16"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bnode as predicate (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-16.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-struct-17>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-struct-17"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "labeled bnode as predicate (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-struct-17.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-lang-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-lang-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langString with bad lang (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-lang-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-esc-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-esc-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad string escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-esc-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-esc-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-esc-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad string escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-esc-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-esc-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-esc-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad string escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-esc-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-esc-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-esc-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad string escape (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-esc-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-pname-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-pname-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'~' must be escaped in pname (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-pname-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-pname-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-pname-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad %-sequence in pname (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-pname-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-pname-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-pname-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad unicode escape in pname (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-pname-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mismatching string literal open/close (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mismatching string literal open/close (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mismatching string literal long/short (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "mismatching long string literal open/close (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Long literal with missing end (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Long literal with extra quote (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-06.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-string-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-string-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Long literal with extra squote (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-string-07.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-num-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-num-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-num-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-num-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-num-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-num-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-num-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-num-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-num-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-num-05.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-struct-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-struct-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "triple with IRIs"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-struct-01.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-struct-01.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-struct-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-struct-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "triple with IRIs and embedded whitespace"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-struct-02.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-struct-02.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Blank subject"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-01.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-01.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "@prefix and qnames"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-02.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-02.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] ", operator"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-03.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-03.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "; operator"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-04.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-04.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-05>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty [] as subject and object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-05.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-05.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-06>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-06"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "non-empty [] as subject and object"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-06.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-06.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-07>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-07"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "'a' as predicate"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-07.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-07.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-08>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-08"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "simple collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-08.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-08.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-09>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-09"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty collection"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-09.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-09.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-10>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-10"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "integer datatyped literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-10.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-10.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-11>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-11"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "decimal integer canonicalization"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-11.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-11.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-12>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-12"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "- and _ in names and qnames"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-12.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-12.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-13>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-13"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "tests for rdf:_<numbers> and other qnames starting with _"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-13.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-13.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-14>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-14"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "bare : allowed"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-14.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-14.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-15>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-15"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "simple long literal"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-15.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-15.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-16>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-16"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "long literals with escapes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-16.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-16.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-17>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-17"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "floating point number"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-17.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-17.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-18>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-18"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "empty literals, normal and long variant"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-18.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-18.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-19>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-19"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "positive integer, decimal and doubles"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-19.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-19.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-20>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-20"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "negative integer, decimal and doubles"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-20.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-20.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-21>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-21"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "long literal ending in double quote"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-21.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-21.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-22>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-22"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "boolean literals"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-22.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-22.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-23>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-23"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "comments"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-23.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-23.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-24>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-24"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "no final mewline"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-24.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-24.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-25>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-25"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "repeating a @prefix changes pname definition"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-25.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-25.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-26>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-26"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Variations on decimal canonicalization"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-26.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-26.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-subm-27>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-subm-27"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Repeating @base changes base for relative IRI lookup"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-27.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-subm-27.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-bad-01>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-bad-01"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : good escape, bad charcater (negative evaluation test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-bad-01.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-bad-02>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-bad-02"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : hex 3C is < (negative evaluation test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-bad-02.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-bad-03>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-bad-03"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : hex 3E is  (negative evaluation test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-bad-03.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-eval-bad-04>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-eval-bad-04"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad IRI : {abc} (negative evaluation test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-eval-bad-04.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#comment_following_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "comment_following_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "comment following localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Proposed)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <comment_following_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <IRI_spo.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#number_sign_following_localName>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "number_sign_following_localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "number sign following localName"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Proposed)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <number_sign_following_localName.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <number_sign_following_localName.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#comment_following_PNAME_NS>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "comment_following_PNAME_NS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "comment following PNAME_NS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Proposed)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <comment_following_PNAME_NS.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <comment_following_PNAME_NS.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#number_sign_following_PNAME_NS>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "number_sign_following_PNAME_NS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "number sign following PNAME_NS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Proposed)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <number_sign_following_PNAME_NS.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <number_sign_following_PNAME_NS.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#LITERAL_LONG2_with_REVERSE_SOLIDUS>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "LITERAL_LONG2_with_REVERSE_SOLIDUS"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "REVERSE SOLIDUS at end of LITERAL_LONG2"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_REVERSE_SOLIDUS.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <LITERAL_LONG2_with_REVERSE_SOLIDUS.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-LITERAL2_with_langtag_and_datatype>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-num-05"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad number format (negative test)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-LITERAL2_with_langtag_and_datatype.ttl>))) ;) .) ([70] ([191 70] ([215 191 70] <#two_LITERAL_LONG2s>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "two_LITERAL_LONG2s"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "two LITERAL_LONG2s testing quote delimiter overrun"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <two_LITERAL_LONG2s.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <two_LITERAL_LONG2s.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#langtagged_LONG_with_subtag>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleEval)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged_LONG_with_subtag"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "langtagged LONG with subtag \"\"\"Cheers\"\"\"@en-UK"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_LONG_with_subtag.ttl>))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:result))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <langtagged_LONG_with_subtag.nt>))) ;) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-blank-label-dot-end>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Blank node label must not end in dot"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-blank-label-dot-end"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-blank-label-dot-end.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-number-dot-in-anon>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Dot delimeter may not appear in anonymous nodes"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-number-dot-in-anon"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-number-dot-in-anon.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-ln-dash-start>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Local name must not begin with dash"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-ln-dash-start"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-ln-dash-start.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-ln-escape>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad hex escape in local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-ln-escape"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-ln-escape.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-ln-escape-start>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Bad hex escape at start of local name"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-ln-escape-start"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-ln-escape-start.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-ns-dot-end>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Prefix must not end in dot"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-ns-dot-end"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-ns-dot-end.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-ns-dot-start>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Prefix must not start with dot"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-ns-dot-start"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-ns-dot-start.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-missing-ns-dot-end>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Prefix must not end in dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-missing-ns-dot-end"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-missing-ns-dot-end.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-bad-missing-ns-dot-start>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtleNegativeSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Prefix must not start with dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-bad-missing-ns-dot-start"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-bad-missing-ns-dot-start.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-ln-dots>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Dots in pname local names"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-ln-dots"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-ln-dots.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-ln-colons>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Colons in pname local names"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-ln-colons"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-ln-colons.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-ns-dots>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Dots in namespace names"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-ns-dots"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-ns-dots.ttl>)))) .) ([70] ([191 70] ([215 191 70] <#turtle-syntax-blank-label>)) ([192 70] ([246 192 70] ([308 246 192 70] ([394 308 246 192 70] rdf:type))) ([247 192 70] ([281 247 192 70] ([289 281 247 192 70] ([394 289 281 247 192 70] rdft:TestTurtlePositiveSyntax)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdfs:comment))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "Characters allowed in blank node labels"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:name))) ([250 192 70] ([281 250 192 70] ([291 281 250 192 70] ([303 291 281 250 192 70] ([342 303 291 281 250 192 70] "turtle-syntax-blank-label"))))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] rdft:approval))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] ([394 289 281 250 192 70] rdft:Approved)))) ; ([249 192 70] ([308 249 192 70] ([394 308 249 192 70] mf:action))) ([250 192 70] ([281 250 192 70] ([289 281 250 192 70] <turtle-syntax-blank-label.ttl>)))) .))
""
[]



Total elapsed time: 477 ms

/home/ahmed/Downloads/TESTS/TurtleTests/turtle-subm-07.ttl